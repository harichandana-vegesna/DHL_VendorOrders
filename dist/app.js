/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/config/DBConnection.ts":
/*!************************************!*\
  !*** ./src/config/DBConnection.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DBConnection = void 0;\r\nconst Sequelize = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nclass DBConnection {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.logger.log('DB NAME', process.env.DB_NAME);\r\n        this.connection = new Sequelize.Sequelize(process.env.DB_NAME, process.env.DB_USER, process.env.DB_PASS, {\r\n            host: process.env.DB_HOST,\r\n            dialect: 'mysql',\r\n            define: {\r\n                timestamps: false\r\n            },\r\n            logging: true\r\n        });\r\n        this.connection.authenticate().then(() => {\r\n            this.logger.log('DB Connected');\r\n        }, (error) => {\r\n            this.logger.log('DB Not Connected', error);\r\n        });\r\n    }\r\n}\r\nexports.DBConnection = DBConnection;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/config/DBConnection.ts?");

/***/ }),

/***/ "./src/controller/AuthController.ts":
/*!******************************************!*\
  !*** ./src/controller/AuthController.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthController = void 0;\r\nconst express_1 = __webpack_require__(/*! express */ \"express\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst AuthService_1 = __webpack_require__(/*! ../service/AuthService */ \"./src/service/AuthService.ts\");\r\nclass AuthController {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.authService = DIContainer_1.DI.get(AuthService_1.AuthService);\r\n    }\r\n    getRouter() {\r\n        let router = express_1.Router();\r\n        router.get('/generate-token', (req, res, next) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let token = yield this.authService.generateJWTToken({ \"user\": \"uat-downstreamuser\", \"password\": \"bless123$\" });\r\n                console.log(`TOken in controller is ${token}`);\r\n                res.json(token);\r\n            }\r\n            catch (error) {\r\n                next(error);\r\n            }\r\n        }));\r\n        return router;\r\n    }\r\n}\r\nexports.AuthController = AuthController;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/controller/AuthController.ts?");

/***/ }),

/***/ "./src/controller/DownStreamController.ts":
/*!************************************************!*\
  !*** ./src/controller/DownStreamController.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DownStreamController = void 0;\r\nconst express_1 = __webpack_require__(/*! express */ \"express\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst AuthService_1 = __webpack_require__(/*! ../service/AuthService */ \"./src/service/AuthService.ts\");\r\nconst DownStreamService_1 = __webpack_require__(/*! ../service/DownStreamService */ \"./src/service/DownStreamService.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass DownStreamController {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.DownStreamService = DIContainer_1.DI.get(DownStreamService_1.DownStreamService);\r\n        this.expResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n    }\r\n    getRouter() {\r\n        const router = express_1.Router();\r\n        router.post('/exp-bkng-rqst', AuthService_1.AuthService.verifyToken, (req, res, next) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let token = yield this.DownStreamService.expBookingReqDownStreamHandler(req.body.message);\r\n                res.json({ \"token\": token });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        /*\r\n            **Downstream Wrapper which handles the TMS Response and posts it to LOBSTER system.\r\n            \r\n        */\r\n        router.post('/consume-tms-response', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let expResponseList;\r\n                if (Array.isArray(req.body)) {\r\n                    expResponseList = req.body;\r\n                }\r\n                else {\r\n                    expResponseList = [req.body];\r\n                }\r\n                this.logger.log(`req.body is ${JSON.stringify(req.body)}`);\r\n                yield this.DownStreamService.consumeTMSResponse(req.body[\"tmsResponse\"]);\r\n                res.json({ \"token\": \"\" });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        /*\r\n            **Downstream Wrapper which handles the TMS Response and persist response in LLP system.\r\n            \r\n        */\r\n        router.post('/tmsResponse', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                this.logger.log(`=============================================START-TMS To LLP DOWNSTREAM=======================================`);\r\n                this.logger.log(`BLESS REQUEST BODY is ${JSON.parse(req.body.message)}`);\r\n                //Calling Downstream service from LLP to TMS\r\n                var downstreamToTmsSystem = yield this.DownStreamService.downStreamToTmsSystem(JSON.parse(req.body.message).transformedMessage, res);\r\n                //var response = await this.LlpClien2Service.clientTmsResponse();\r\n                res.json({ token: downstreamToTmsSystem });\r\n                this.logger.log(`=============================================END-TMS To LLP DOWNSTREAM=======================================`);\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        /*\r\n            **Downstream Wrapper which handles the TMS Response and posts it to LOBSTER system.\r\n            \r\n        */\r\n        router.post('/client-lobster-tms-resp', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                this.logger.log(`=============================================START-C2 To Lobster DOWNSTREAM=======================================`);\r\n                this.logger.log(`BLESS REQUEST BODY is ${JSON.parse(req.body.message)}`);\r\n                var lobMessage = yield this.DownStreamService.downStreamToLobsterSystem(JSON.parse(req.body.message).transformedMessage, res);\r\n                res.json({ token: lobMessage });\r\n                this.logger.log(`=============================================END-C2 To Lobster DOWNSTREAM=======================================`);\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        return router;\r\n    }\r\n}\r\nexports.DownStreamController = DownStreamController;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/controller/DownStreamController.ts?");

/***/ }),

/***/ "./src/controller/ShipmentController.ts":
/*!**********************************************!*\
  !*** ./src/controller/ShipmentController.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ShipmentController = void 0;\r\nconst express_1 = __webpack_require__(/*! express */ \"express\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpTmsService_1 = __webpack_require__(/*! ../service/ExpTmsService */ \"./src/service/ExpTmsService.ts\");\r\nconst ExpResponseDataService_1 = __webpack_require__(/*! ../service/ExpResponseDataService */ \"./src/service/ExpResponseDataService.ts\");\r\nconst LlpClien2Service_1 = __webpack_require__(/*! ../service/LlpClien2Service */ \"./src/service/LlpClien2Service.ts\");\r\nconst LobsterService_1 = __webpack_require__(/*! ../service/LobsterService */ \"./src/service/LobsterService.ts\");\r\nconst AuthService_1 = __webpack_require__(/*! ../service/AuthService */ \"./src/service/AuthService.ts\");\r\nconst VerifyJwtTokenService_1 = __webpack_require__(/*! ../security/VerifyJwtTokenService */ \"./src/security/VerifyJwtTokenService.ts\");\r\nconst DataGenTransformationService_1 = __webpack_require__(/*! ../service/DataGenTransformationService */ \"./src/service/DataGenTransformationService.ts\");\r\nconst DownStreamService_1 = __webpack_require__(/*! ../service/DownStreamService */ \"./src/service/DownStreamService.ts\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass ShipmentController {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.ExpTmsService = DIContainer_1.DI.get(ExpTmsService_1.ExpTmsService);\r\n        this.ExpResponseDataService = DIContainer_1.DI.get(ExpResponseDataService_1.ExpResponseDataService);\r\n        this.LlpClien2Service = DIContainer_1.DI.get(LlpClien2Service_1.LlpClien2Service);\r\n        this.LobsterService = DIContainer_1.DI.get(LobsterService_1.LobsterService);\r\n        this.DataGenTransformationService = DIContainer_1.DI.get(DataGenTransformationService_1.DataGenTransformationService);\r\n        this.DownStreamService = DIContainer_1.DI.get(DownStreamService_1.DownStreamService);\r\n        this.authService = DIContainer_1.DI.get(AuthService_1.AuthService);\r\n        this.verifyJwtTokenService = DIContainer_1.DI.get(VerifyJwtTokenService_1.VerifyJwtTokenService);\r\n    }\r\n    getRouter() {\r\n        const router = express_1.Router();\r\n        //LLP-TMS//\r\n        router.post('/expResponse', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                var responseData, response;\r\n                //console.log(\"Request Body inside ShipmentController\",req.body)\r\n                responseData = yield this.ExpTmsService.ExpDhl();\r\n                // console.log(\"Response in ShipmentController\",responseData)\r\n                // response = await this.ExpResponseDataService.expResData(responseData, res)\r\n                res.json({ status: { code: 'SUCCESS', message: \"Created Successfully\" } });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        //DOWNSTREAM LLP-TMS(EXP Request Data) & LLP-CLIENT2(TMS Response)//  \r\n        router.post('/tmsResponse', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                this.logger.log(`=============================================START-LLP -TMS DOWNSTREAM=======================================`);\r\n                //this.logger.log(`BLESS REQUEST BODY is ${JSON.stringify(req.body.message)}`);\r\n                //Calling Downstream service from LLP to TMS\r\n                var downstreamToTmsSystem = yield this.DownStreamService.downStreamToTmsSystem(JSON.parse(req.body.message).transformedMessage, res);\r\n                //var response = await this.LlpClien2Service.clientTmsResponse();\r\n                res.json({ token: downstreamToTmsSystem });\r\n                this.logger.log(`=============================================END-TMS To LLP DOWNSTREAM=======================================`);\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        //DOWNSTREAM CLIENT2-LOBSTER//\r\n        router.post('/client-lobster-tms-resp', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                this.logger.log(`=============================================START-C2 To Lobster DOWNSTREAM=======================================`);\r\n                this.logger.log(`BLESS REQUEST BODY is ${JSON.parse(req.body.message)}`);\r\n                var lobMessage = yield this.DownStreamService.downStreamToLobsterSystem(JSON.parse(req.body.message).transformedMessage, res);\r\n                res.json({ token: lobMessage });\r\n                this.logger.log(`=============================================END-C2 To Lobster DOWNSTREAM=======================================`);\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        router.post('/lobsterData', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                var lobMessage;\r\n                lobMessage = yield this.LobsterService.postTmsResponseToLobster();\r\n                res.json({ lobdata: lobMessage });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        //Post Events Data to Lobster\r\n        router.post('/events-to-lobster', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                let result = yield this.LobsterService.postEventsToLobster();\r\n                res.json({ result });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        //DATAGEN\r\n        router.post('/datagen', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                var pubMessage;\r\n                //pubMessage = await this.DataGenTransformationService.dataGenTransformation(\"VND_ORD_LLP_TMS_DATAGEN\");\r\n                res.json({ data: pubMessage });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: error } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        // To get TMS DATA\r\n        router.post('/expTmsData', (req, res) => __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                var result;\r\n                //console.log(\"Request Body inside ShipmentController\",req.body)\r\n                result = yield this.ExpTmsService.expTmsData(req.body, res);\r\n                // console.log(\"Response in ShipmentController\",result)\r\n                res.json({ status: { code: 'SUCCESS', message: \"Created Successfully\" }, data: result });\r\n            }\r\n            catch (error) {\r\n                let response = { status: { code: 'FAILURE', message: \"Error While Uploading The File\" } };\r\n                res.json(response);\r\n            }\r\n        }));\r\n        return router;\r\n    }\r\n}\r\nexports.ShipmentController = ShipmentController;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/controller/ShipmentController.ts?");

/***/ }),

/***/ "./src/data/entity/AccountsMaster.ts":
/*!*******************************************!*\
  !*** ./src/data/entity/AccountsMaster.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AccountsMaster = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass AccountsMaster extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return AccountsMaster.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            bill_toparty_account: {\r\n                type: sequelize_1.DataTypes.STRING(50),\r\n                allowNull: true\r\n            },\r\n            shipper_account: {\r\n                type: sequelize_1.DataTypes.STRING(50),\r\n                allowNull: true\r\n            },\r\n            consignee_account: {\r\n                type: sequelize_1.DataTypes.STRING(50),\r\n                allowNull: true\r\n            },\r\n            account_description: {\r\n                type: sequelize_1.DataTypes.STRING(50),\r\n                allowNull: true\r\n            },\r\n            rate_identifier: {\r\n                type: sequelize_1.DataTypes.STRING(250),\r\n                allowNull: true\r\n            },\r\n            business_unit: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            bless_identifier: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'accounts_master',\r\n            timestamps: false,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.AccountsMaster = AccountsMaster;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/AccountsMaster.ts?");

/***/ }),

/***/ "./src/data/entity/Address.ts":
/*!************************************!*\
  !*** ./src/data/entity/Address.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Address = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass Address extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return Address.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            parent_id: {\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: true\r\n            },\r\n            customer_order_number: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            address_id: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            address_type: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            name: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            line1: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            line2: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            city: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            state: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            zip: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            country_code: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            country_name: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'address',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.Address = Address;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/Address.ts?");

/***/ }),

/***/ "./src/data/entity/AppUsers.ts":
/*!*************************************!*\
  !*** ./src/data/entity/AppUsers.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AppUsers = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass AppUsers extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return AppUsers.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            email_id: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: false,\r\n                unique: \"emailid\"\r\n            },\r\n            password: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: false\r\n            },\r\n            user_type: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: false\r\n            },\r\n            user_id: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true,\r\n                unique: \"userid\"\r\n            },\r\n            user_org: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            user_role: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            organiation_type: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            creation_date: {\r\n                type: sequelize_1.DataTypes.DATEONLY,\r\n                allowNull: true\r\n            },\r\n            last_update_date: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'app_users',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"emailid\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"email_id\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"userid\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"user_id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.AppUsers = AppUsers;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/AppUsers.ts?");

/***/ }),

/***/ "./src/data/entity/BvEventsToLobster.ts":
/*!**********************************************!*\
  !*** ./src/data/entity/BvEventsToLobster.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BvEventsToLobster = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass BvEventsToLobster extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return BvEventsToLobster.init({\r\n            id: {\r\n                type: sequelize_1.DataTypes.BLOB,\r\n                allowNull: true,\r\n                primaryKey: true\r\n            },\r\n            hawb: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            shipperId: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            customerOrderNumber: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            events: {\r\n                type: sequelize_1.DataTypes.JSON,\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'BV_EVENTS_TO_LOBSTER',\r\n            timestamps: true,\r\n            paranoid: true\r\n        });\r\n    }\r\n}\r\nexports.BvEventsToLobster = BvEventsToLobster;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/BvEventsToLobster.ts?");

/***/ }),

/***/ "./src/data/entity/ConfigEventsToLobster.ts":
/*!**************************************************!*\
  !*** ./src/data/entity/ConfigEventsToLobster.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConfigEventsToLobster = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass ConfigEventsToLobster extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return ConfigEventsToLobster.init({\r\n            id: {\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            event_code: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            event_description: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'config_events_to_lobster',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.ConfigEventsToLobster = ConfigEventsToLobster;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/ConfigEventsToLobster.ts?");

/***/ }),

/***/ "./src/data/entity/Documents.ts":
/*!**************************************!*\
  !*** ./src/data/entity/Documents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Documents = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass Documents extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return Documents.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            customerordernumber: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            shiptrackingnum: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            typecode: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            path: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            name: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            label: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'documents',\r\n            timestamps: false,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.Documents = Documents;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/Documents.ts?");

/***/ }),

/***/ "./src/data/entity/Events.ts":
/*!***********************************!*\
  !*** ./src/data/entity/Events.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Events = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass Events extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return Events.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            hawb: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            shipperId: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_code: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_type: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_desc: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_location: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_date: {\r\n                type: sequelize_1.DataTypes.DATE,\r\n                allowNull: true\r\n            },\r\n            event_offset: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            processing_status: {\r\n                type: sequelize_1.DataTypes.STRING(20),\r\n                allowNull: true\r\n            },\r\n            error_reason: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'events',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_code\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_code\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_desc\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_desc\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_date\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_date\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.Events = Events;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/Events.ts?");

/***/ }),

/***/ "./src/data/entity/EventsStage.ts":
/*!****************************************!*\
  !*** ./src/data/entity/EventsStage.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventsStage = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass EventsStage extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return EventsStage.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            parent_id: {\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: true\r\n            },\r\n            hawb: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_type: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            event_code: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_desc: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_location: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            event_date: {\r\n                type: sequelize_1.DataTypes.DATE,\r\n                allowNull: true\r\n            },\r\n            event_offset: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'events_stage',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_code\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_code\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_parent_id\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"parent_id\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_desc\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_desc\" },\r\n                    ]\r\n                },\r\n                {\r\n                    name: \"idx_event_date\",\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"event_date\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.EventsStage = EventsStage;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/EventsStage.ts?");

/***/ }),

/***/ "./src/data/entity/ExpResponseData.ts":
/*!********************************************!*\
  !*** ./src/data/entity/ExpResponseData.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpResponseData = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass ExpResponseData extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return ExpResponseData.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            message: {\r\n                type: sequelize_1.DataTypes.JSON,\r\n                allowNull: false\r\n            },\r\n            shipmentTrackingNumber: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            token: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            customer_order_number: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            statusCode: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            status: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            error_reason: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            },\r\n            req_file_path: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            },\r\n            req_file_uuid: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            parent_uuid: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'exp_response_data',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.ExpResponseData = ExpResponseData;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/ExpResponseData.ts?");

/***/ }),

/***/ "./src/data/entity/ExpTmsData.ts":
/*!***************************************!*\
  !*** ./src/data/entity/ExpTmsData.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpTmsData = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass ExpTmsData extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return ExpTmsData.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            message: {\r\n                type: sequelize_1.DataTypes.JSON,\r\n                allowNull: true\r\n            },\r\n            shipment_Tracking_Number: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            status: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            token: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            uuid: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            customer_order_number: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'exp_tms_data',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.ExpTmsData = ExpTmsData;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/ExpTmsData.ts?");

/***/ }),

/***/ "./src/data/entity/InvoiceDetails.ts":
/*!*******************************************!*\
  !*** ./src/data/entity/InvoiceDetails.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InvoiceDetails = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass InvoiceDetails extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return InvoiceDetails.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            customerordernumber: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            mwab: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            hawb: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            customerreference: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            typecode: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            uploadstatus: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            invoicenumber: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            invoicedate: {\r\n                type: sequelize_1.DataTypes.DATEONLY,\r\n                allowNull: true\r\n            },\r\n            declaredvalue: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            declaredvaluecurrency: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            incoterm: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            description: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            responseerrorcode: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            responseerrortitle: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            responseerrordetail: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            responsetimestamp: {\r\n                type: sequelize_1.DataTypes.DATE,\r\n                allowNull: true\r\n            },\r\n            additionalcharge: {\r\n                type: sequelize_1.DataTypes.DOUBLE,\r\n                allowNull: true\r\n            },\r\n            additionalchargetype: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'invoice_details',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.InvoiceDetails = InvoiceDetails;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/InvoiceDetails.ts?");

/***/ }),

/***/ "./src/data/entity/LineItems.ts":
/*!**************************************!*\
  !*** ./src/data/entity/LineItems.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LineItems = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass LineItems extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return LineItems.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            customerordernumber: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            serial_number: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            description: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            price: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            quantity_value: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            quantity_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            commoditytype: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            commodityhscode: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            manufacturercountry: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            net_value: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            netvalue_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            gross_value: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            grossvalue_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'line_items',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.LineItems = LineItems;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/LineItems.ts?");

/***/ }),

/***/ "./src/data/entity/OrganisationContact.ts":
/*!************************************************!*\
  !*** ./src/data/entity/OrganisationContact.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OrganisationContact = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass OrganisationContact extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return OrganisationContact.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            parent_id: {\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: true\r\n            },\r\n            address_id: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            phone: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            full_Name: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            email: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'organisation_contact',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.OrganisationContact = OrganisationContact;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/OrganisationContact.ts?");

/***/ }),

/***/ "./src/data/entity/Packages.ts":
/*!*************************************!*\
  !*** ./src/data/entity/Packages.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Packages = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass Packages extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return Packages.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            parent_id: {\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: true\r\n            },\r\n            customer_order_number: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            gross_weight: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            gross_weight_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            length: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            length_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            width: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            width_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            height: {\r\n                type: sequelize_1.DataTypes.DECIMAL(30, 7),\r\n                allowNull: true\r\n            },\r\n            height_uom: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            description: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'packages',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.Packages = Packages;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/Packages.ts?");

/***/ }),

/***/ "./src/data/entity/VendorBooking.ts":
/*!******************************************!*\
  !*** ./src/data/entity/VendorBooking.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VendorBooking = void 0;\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass VendorBooking extends sequelize_1.Model {\r\n    static initModel(sequelize) {\r\n        return VendorBooking.init({\r\n            id: {\r\n                autoIncrement: true,\r\n                type: sequelize_1.DataTypes.INTEGER,\r\n                allowNull: false,\r\n                primaryKey: true\r\n            },\r\n            customer_order_number: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            sequence_timestamp: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            planned_shipping_date_and_time: {\r\n                type: sequelize_1.DataTypes.DATE,\r\n                allowNull: true\r\n            },\r\n            shipment_creation_date_time: {\r\n                type: sequelize_1.DataTypes.DATE,\r\n                allowNull: true\r\n            },\r\n            order_status: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            shipment_inco_terms: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            commodity_code: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            commodity_text: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            shipment_service_code: {\r\n                type: sequelize_1.DataTypes.STRING(100),\r\n                allowNull: true\r\n            },\r\n            dangerous_goods: {\r\n                type: sequelize_1.DataTypes.STRING(45),\r\n                allowNull: true\r\n            },\r\n            content_id: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            uncode: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            consignor_ref: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            hawb: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            },\r\n            response_error_code: {\r\n                type: sequelize_1.DataTypes.STRING(1000),\r\n                allowNull: true\r\n            },\r\n            response_error_title: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            },\r\n            response_error_detail: {\r\n                type: sequelize_1.DataTypes.TEXT,\r\n                allowNull: true\r\n            },\r\n            response_time_stamp: {\r\n                type: sequelize_1.DataTypes.STRING(255),\r\n                allowNull: true\r\n            }\r\n        }, {\r\n            sequelize,\r\n            tableName: 'vendor_booking',\r\n            timestamps: true,\r\n            paranoid: true,\r\n            indexes: [\r\n                {\r\n                    name: \"PRIMARY\",\r\n                    unique: true,\r\n                    using: \"BTREE\",\r\n                    fields: [\r\n                        { name: \"id\" },\r\n                    ]\r\n                },\r\n            ]\r\n        });\r\n    }\r\n}\r\nexports.VendorBooking = VendorBooking;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/VendorBooking.ts?");

/***/ }),

/***/ "./src/data/entity/init-models.ts":
/*!****************************************!*\
  !*** ./src/data/entity/init-models.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.initModels = exports.VendorBooking = exports.Packages = exports.OrganisationContact = exports.LineItems = exports.InvoiceDetails = exports.ExpTmsData = exports.ExpResponseData = exports.EventsStage = exports.Events = exports.Documents = exports.ConfigEventsToLobster = exports.AppUsers = exports.Address = exports.AccountsMaster = exports.BvEventsToLobster = void 0;\r\nconst BvEventsToLobster_1 = __webpack_require__(/*! ./BvEventsToLobster */ \"./src/data/entity/BvEventsToLobster.ts\");\r\nObject.defineProperty(exports, \"BvEventsToLobster\", ({ enumerable: true, get: function () { return BvEventsToLobster_1.BvEventsToLobster; } }));\r\nconst AccountsMaster_1 = __webpack_require__(/*! ./AccountsMaster */ \"./src/data/entity/AccountsMaster.ts\");\r\nObject.defineProperty(exports, \"AccountsMaster\", ({ enumerable: true, get: function () { return AccountsMaster_1.AccountsMaster; } }));\r\nconst Address_1 = __webpack_require__(/*! ./Address */ \"./src/data/entity/Address.ts\");\r\nObject.defineProperty(exports, \"Address\", ({ enumerable: true, get: function () { return Address_1.Address; } }));\r\nconst AppUsers_1 = __webpack_require__(/*! ./AppUsers */ \"./src/data/entity/AppUsers.ts\");\r\nObject.defineProperty(exports, \"AppUsers\", ({ enumerable: true, get: function () { return AppUsers_1.AppUsers; } }));\r\nconst ConfigEventsToLobster_1 = __webpack_require__(/*! ./ConfigEventsToLobster */ \"./src/data/entity/ConfigEventsToLobster.ts\");\r\nObject.defineProperty(exports, \"ConfigEventsToLobster\", ({ enumerable: true, get: function () { return ConfigEventsToLobster_1.ConfigEventsToLobster; } }));\r\nconst Documents_1 = __webpack_require__(/*! ./Documents */ \"./src/data/entity/Documents.ts\");\r\nObject.defineProperty(exports, \"Documents\", ({ enumerable: true, get: function () { return Documents_1.Documents; } }));\r\nconst Events_1 = __webpack_require__(/*! ./Events */ \"./src/data/entity/Events.ts\");\r\nObject.defineProperty(exports, \"Events\", ({ enumerable: true, get: function () { return Events_1.Events; } }));\r\nconst EventsStage_1 = __webpack_require__(/*! ./EventsStage */ \"./src/data/entity/EventsStage.ts\");\r\nObject.defineProperty(exports, \"EventsStage\", ({ enumerable: true, get: function () { return EventsStage_1.EventsStage; } }));\r\nconst ExpResponseData_1 = __webpack_require__(/*! ./ExpResponseData */ \"./src/data/entity/ExpResponseData.ts\");\r\nObject.defineProperty(exports, \"ExpResponseData\", ({ enumerable: true, get: function () { return ExpResponseData_1.ExpResponseData; } }));\r\nconst ExpTmsData_1 = __webpack_require__(/*! ./ExpTmsData */ \"./src/data/entity/ExpTmsData.ts\");\r\nObject.defineProperty(exports, \"ExpTmsData\", ({ enumerable: true, get: function () { return ExpTmsData_1.ExpTmsData; } }));\r\nconst InvoiceDetails_1 = __webpack_require__(/*! ./InvoiceDetails */ \"./src/data/entity/InvoiceDetails.ts\");\r\nObject.defineProperty(exports, \"InvoiceDetails\", ({ enumerable: true, get: function () { return InvoiceDetails_1.InvoiceDetails; } }));\r\nconst LineItems_1 = __webpack_require__(/*! ./LineItems */ \"./src/data/entity/LineItems.ts\");\r\nObject.defineProperty(exports, \"LineItems\", ({ enumerable: true, get: function () { return LineItems_1.LineItems; } }));\r\nconst OrganisationContact_1 = __webpack_require__(/*! ./OrganisationContact */ \"./src/data/entity/OrganisationContact.ts\");\r\nObject.defineProperty(exports, \"OrganisationContact\", ({ enumerable: true, get: function () { return OrganisationContact_1.OrganisationContact; } }));\r\nconst Packages_1 = __webpack_require__(/*! ./Packages */ \"./src/data/entity/Packages.ts\");\r\nObject.defineProperty(exports, \"Packages\", ({ enumerable: true, get: function () { return Packages_1.Packages; } }));\r\nconst VendorBooking_1 = __webpack_require__(/*! ./VendorBooking */ \"./src/data/entity/VendorBooking.ts\");\r\nObject.defineProperty(exports, \"VendorBooking\", ({ enumerable: true, get: function () { return VendorBooking_1.VendorBooking; } }));\r\nfunction initModels(sequelize) {\r\n    const BvEventsToLobster = BvEventsToLobster_1.BvEventsToLobster.initModel(sequelize);\r\n    const AccountsMaster = AccountsMaster_1.AccountsMaster.initModel(sequelize);\r\n    const Address = Address_1.Address.initModel(sequelize);\r\n    const AppUsers = AppUsers_1.AppUsers.initModel(sequelize);\r\n    const ConfigEventsToLobster = ConfigEventsToLobster_1.ConfigEventsToLobster.initModel(sequelize);\r\n    const Documents = Documents_1.Documents.initModel(sequelize);\r\n    const Events = Events_1.Events.initModel(sequelize);\r\n    const EventsStage = EventsStage_1.EventsStage.initModel(sequelize);\r\n    const ExpResponseData = ExpResponseData_1.ExpResponseData.initModel(sequelize);\r\n    const ExpTmsData = ExpTmsData_1.ExpTmsData.initModel(sequelize);\r\n    const InvoiceDetails = InvoiceDetails_1.InvoiceDetails.initModel(sequelize);\r\n    const LineItems = LineItems_1.LineItems.initModel(sequelize);\r\n    const OrganisationContact = OrganisationContact_1.OrganisationContact.initModel(sequelize);\r\n    const Packages = Packages_1.Packages.initModel(sequelize);\r\n    const VendorBooking = VendorBooking_1.VendorBooking.initModel(sequelize);\r\n    return {\r\n        BvEventsToLobster: BvEventsToLobster,\r\n        AccountsMaster: AccountsMaster,\r\n        Address: Address,\r\n        AppUsers: AppUsers,\r\n        ConfigEventsToLobster: ConfigEventsToLobster,\r\n        Documents: Documents,\r\n        Events: Events,\r\n        EventsStage: EventsStage,\r\n        ExpResponseData: ExpResponseData,\r\n        ExpTmsData: ExpTmsData,\r\n        InvoiceDetails: InvoiceDetails,\r\n        LineItems: LineItems,\r\n        OrganisationContact: OrganisationContact,\r\n        Packages: Packages,\r\n        VendorBooking: VendorBooking,\r\n    };\r\n}\r\nexports.initModels = initModels;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/entity/init-models.ts?");

/***/ }),

/***/ "./src/data/repository/AddressRepository.ts":
/*!**************************************************!*\
  !*** ./src/data/repository/AddressRepository.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AddressRepository = void 0;\r\nconst init_models_1 = __webpack_require__(/*! ../entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass AddressRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return init_models_1.Address;\r\n    }\r\n}\r\nexports.AddressRepository = AddressRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/AddressRepository.ts?");

/***/ }),

/***/ "./src/data/repository/BaseRepository.ts":
/*!***********************************************!*\
  !*** ./src/data/repository/BaseRepository.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BaseRepository = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst sequelize_1 = __webpack_require__(/*! sequelize */ \"sequelize\");\r\nclass BaseRepository {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    getModel() {\r\n        return sequelize_1.Model;\r\n    }\r\n    get(whereObj, attributes, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.logger.log(\"Attributes in Lines Get \", attributes);\r\n            if (attributes !== null && attributes !== undefined) {\r\n                return yield new Promise((resolve, reject) => {\r\n                    this.getModel().findAll({ attributes: attributes, where: whereObj, transaction }).then((get) => {\r\n                        resolve(get);\r\n                    }).catch((error) => {\r\n                        this.logger.error(error);\r\n                        reject(error);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                return yield new Promise((resolve, reject) => {\r\n                    this.getModel().findAll({ where: whereObj, transaction }).then((get) => {\r\n                        resolve(get);\r\n                    }).catch((error) => {\r\n                        this.logger.error(error);\r\n                        reject(error);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n    getCount(whereObj, attributes, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield new Promise((resolve, reject) => {\r\n                this.getModel().count({ where: whereObj, transaction }).then((get) => {\r\n                    resolve(get);\r\n                }).catch((error) => {\r\n                    this.logger.error(error);\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    getByOrder(whereObj, orderBy, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield new Promise((resolve, reject) => {\r\n                this.getModel().findAll({ where: whereObj, order: orderBy, transaction }).then((get) => {\r\n                    resolve(get);\r\n                }).catch((error) => {\r\n                    this.logger.error(error);\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    create(obj, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield new Promise((resolve, reject) => {\r\n                this.getModel().create(obj, { transaction }).then((created) => {\r\n                    resolve(created);\r\n                }).catch((error) => {\r\n                    this.logger.error(error);\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    update(whereObj, updateObj, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield new Promise((resolve, reject) => {\r\n                this.getModel().update(updateObj, { where: whereObj, transaction }).then((update) => {\r\n                    resolve(update[0]);\r\n                }).catch((error) => {\r\n                    this.logger.error(error);\r\n                    reject(error);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    updateOrCreate(obj, uniqueFieldsWhereObj, transaction) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let foundItem = false;\r\n            if (Object.keys(uniqueFieldsWhereObj).length > 0) {\r\n                foundItem = yield this.getModel().findOne({ where: uniqueFieldsWhereObj, transaction });\r\n            }\r\n            return yield new Promise((resolve, reject) => {\r\n                let item = null;\r\n                if (!foundItem) {\r\n                    item = this.getModel().create(obj, { transaction });\r\n                    resolve(item);\r\n                }\r\n                else {\r\n                    item = this.getModel().update(obj, { where: uniqueFieldsWhereObj, transaction });\r\n                    resolve(item);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.BaseRepository = BaseRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/BaseRepository.ts?");

/***/ }),

/***/ "./src/data/repository/DocumentRepository.ts":
/*!***************************************************!*\
  !*** ./src/data/repository/DocumentRepository.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DocumentRepository = void 0;\r\nconst init_models_1 = __webpack_require__(/*! ../entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass DocumentRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return init_models_1.Documents;\r\n    }\r\n}\r\nexports.DocumentRepository = DocumentRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/DocumentRepository.ts?");

/***/ }),

/***/ "./src/data/repository/EventsRepository.ts":
/*!*************************************************!*\
  !*** ./src/data/repository/EventsRepository.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventsRepository = void 0;\r\nconst init_models_1 = __webpack_require__(/*! ../entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass EventsRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return init_models_1.Events;\r\n    }\r\n}\r\nexports.EventsRepository = EventsRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/EventsRepository.ts?");

/***/ }),

/***/ "./src/data/repository/EventsToLobsterRepository.ts":
/*!**********************************************************!*\
  !*** ./src/data/repository/EventsToLobsterRepository.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventsToLobsterRepository = void 0;\r\nconst init_models_1 = __webpack_require__(/*! ../entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass EventsToLobsterRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return init_models_1.BvEventsToLobster;\r\n    }\r\n}\r\nexports.EventsToLobsterRepository = EventsToLobsterRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/EventsToLobsterRepository.ts?");

/***/ }),

/***/ "./src/data/repository/ExpResponseDataRepository.ts":
/*!**********************************************************!*\
  !*** ./src/data/repository/ExpResponseDataRepository.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpResponseDataRepository = void 0;\r\nconst ExpResponseData_1 = __webpack_require__(/*! ../entity/ExpResponseData */ \"./src/data/entity/ExpResponseData.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass ExpResponseDataRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return ExpResponseData_1.ExpResponseData;\r\n    }\r\n}\r\nexports.ExpResponseDataRepository = ExpResponseDataRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/ExpResponseDataRepository.ts?");

/***/ }),

/***/ "./src/data/repository/ExpTmsDataRepository.ts":
/*!*****************************************************!*\
  !*** ./src/data/repository/ExpTmsDataRepository.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpTmsDataRepository = void 0;\r\nconst ExpTmsData_1 = __webpack_require__(/*! ../entity/ExpTmsData */ \"./src/data/entity/ExpTmsData.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass ExpTmsDataRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return ExpTmsData_1.ExpTmsData;\r\n    }\r\n}\r\nexports.ExpTmsDataRepository = ExpTmsDataRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/ExpTmsDataRepository.ts?");

/***/ }),

/***/ "./src/data/repository/VendorBookingRepository.ts":
/*!********************************************************!*\
  !*** ./src/data/repository/VendorBookingRepository.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VendorBookingRepository = void 0;\r\nconst init_models_1 = __webpack_require__(/*! ../entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst BaseRepository_1 = __webpack_require__(/*! ./BaseRepository */ \"./src/data/repository/BaseRepository.ts\");\r\nclass VendorBookingRepository extends BaseRepository_1.BaseRepository {\r\n    getModel() {\r\n        return init_models_1.VendorBooking;\r\n    }\r\n}\r\nexports.VendorBookingRepository = VendorBookingRepository;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/data/repository/VendorBookingRepository.ts?");

/***/ }),

/***/ "./src/di/DIContainer.ts":
/*!*******************************!*\
  !*** ./src/di/DIContainer.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DI = void 0;\r\nclass DI {\r\n    constructor() {\r\n        this.perminantClasses = ['DBConnection', 'Keycloak', 'MemoryStore'];\r\n        this.resolvedInstances = {};\r\n        this.resolvedPerminantInstances = {};\r\n    }\r\n    static destroy() {\r\n        this.context.resolvedInstances = {};\r\n    }\r\n    static get(className, ...params) {\r\n        if (this.context === undefined || this.context === null) {\r\n            this.context = new DI();\r\n        }\r\n        if (this.context.perminantClasses.indexOf(className.name) > -1) {\r\n            if (this.context.resolvedPerminantInstances[className.name] === undefined || this.context.resolvedPerminantInstances[className.name] === null) {\r\n                this.context.resolvedPerminantInstances[className.name] = new className(...params);\r\n            }\r\n            return this.context.resolvedPerminantInstances[className.name];\r\n        }\r\n        else {\r\n            if (this.context.resolvedInstances[className.name] === undefined || this.context.resolvedInstances[className.name] === null) {\r\n                this.context.resolvedInstances[className.name] = new className(...params);\r\n            }\r\n            return this.context.resolvedInstances[className.name];\r\n        }\r\n    }\r\n}\r\nexports.DI = DI;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/di/DIContainer.ts?");

/***/ }),

/***/ "./src/error/ErrorHandler.ts":
/*!***********************************!*\
  !*** ./src/error/ErrorHandler.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ErrorHandler = void 0;\r\nconst BaseResponse_1 = __webpack_require__(/*! ../response/BaseResponse */ \"./src/response/BaseResponse.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nclass ErrorHandler extends Error {\r\n    errorHandler(err, req, res, next) {\r\n        const logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        const responseStatus = new BaseResponse_1.ResponseStatus(BaseResponse_1.ResponseCode.FAILURE, err.message);\r\n        logger.error('Error Message: ', err.message);\r\n        logger.error('Error Name: ', err.name);\r\n        logger.error('Error Stack: ', err.stack);\r\n        res.json(new BaseResponse_1.BaseResponse(responseStatus));\r\n    }\r\n}\r\nexports.ErrorHandler = ErrorHandler;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/error/ErrorHandler.ts?");

/***/ }),

/***/ "./src/logger/Logger.ts":
/*!******************************!*\
  !*** ./src/logger/Logger.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Logger = void 0;\r\nconst winston_1 = __importDefault(__webpack_require__(/*! winston */ \"winston\"));\r\nclass Logger {\r\n    constructor() {\r\n        this.logger = winston_1.default.createLogger({\r\n            format: winston_1.default.format.combine(winston_1.default.format.colorize(), winston_1.default.format.timestamp({\r\n                format: 'YYYY-MM-DD HH:mm:ss'\r\n            }), winston_1.default.format.printf(info => `${info.timestamp} ${info.level}: ${this.messageConverter(info)} \\n`)),\r\n            defaultMeta: {},\r\n            transports: [\r\n                new winston_1.default.transports.File({ filename: 'info.log', dirname: 'logs', maxsize: 10000, level: 'info' }),\r\n                new winston_1.default.transports.File({ filename: 'debug.log', dirname: 'logs', maxsize: 10000, level: 'debug' }),\r\n                new winston_1.default.transports.File({ filename: 'warn.log', dirname: 'logs', maxsize: 10000, level: 'warn' }),\r\n                new winston_1.default.transports.File({ filename: 'error.log', dirname: 'logs', maxsize: 10000, level: 'error' }),\r\n                new winston_1.default.transports.Console({ level: 'debug' })\r\n            ]\r\n        });\r\n        this.logger.exceptions.handle(new winston_1.default.transports.File({ filename: 'exceptions.log', dirname: 'logs' }), new winston_1.default.transports.Console());\r\n    }\r\n    dbInsertionerror(...messages) {\r\n        this.logger.warn('\\u{274E} ', messages, '\\n');\r\n    }\r\n    messageConverter(obj) {\r\n        if (typeof obj === 'object') {\r\n            return JSON.stringify(obj);\r\n        }\r\n        return obj;\r\n    }\r\n    log(...messages) {\r\n        this.logger.debug('\\u{1F590} ', messages, '\\n');\r\n    }\r\n    info(...messages) {\r\n        this.logger.info('\\u{2139} ', messages, '\\n');\r\n    }\r\n    warn(...messages) {\r\n        this.logger.warn('\\u{1F525} ', messages, '\\n');\r\n    }\r\n    error(...messages) {\r\n        this.logger.error('\\u{274E} ', messages, '\\n');\r\n    }\r\n}\r\nexports.Logger = Logger;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/logger/Logger.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst express_1 = __importDefault(__webpack_require__(/*! express */ \"express\"));\r\nconst cors_1 = __importDefault(__webpack_require__(/*! cors */ \"cors\"));\r\nconst dotenv_1 = __importDefault(__webpack_require__(/*! dotenv */ \"dotenv\"));\r\nconst Logger_1 = __webpack_require__(/*! ./logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DBConnection_1 = __webpack_require__(/*! ./config/DBConnection */ \"./src/config/DBConnection.ts\");\r\nconst ShipmentController_1 = __webpack_require__(/*! ./controller/ShipmentController */ \"./src/controller/ShipmentController.ts\");\r\nconst init_models_1 = __webpack_require__(/*! ./data/entity/init-models */ \"./src/data/entity/init-models.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ./di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ErrorHandler_1 = __webpack_require__(/*! ./error/ErrorHandler */ \"./src/error/ErrorHandler.ts\");\r\nconst express_session_1 = __importStar(__webpack_require__(/*! express-session */ \"express-session\"));\r\nconst DownStreamController_1 = __webpack_require__(/*! ./controller/DownStreamController */ \"./src/controller/DownStreamController.ts\");\r\nconst AuthController_1 = __webpack_require__(/*! ./controller/AuthController */ \"./src/controller/AuthController.ts\");\r\nconst ExpTmsService_1 = __webpack_require__(/*! ./service/ExpTmsService */ \"./src/service/ExpTmsService.ts\");\r\nconst LlpClien2Service_1 = __webpack_require__(/*! ./service/LlpClien2Service */ \"./src/service/LlpClien2Service.ts\");\r\nconst LobsterService_1 = __webpack_require__(/*! ./service/LobsterService */ \"./src/service/LobsterService.ts\");\r\nconst multer = __webpack_require__(/*! multer */ \"multer\");\r\nvar upload = multer();\r\nconst expressApp = express_1.default();\r\nvar bodyParser = __webpack_require__(/*! body-parser */ \"body-parser\");\r\nvar cron = __webpack_require__(/*! cron */ \"cron\");\r\nexpressApp.use(bodyParser.json({ limit: '500mb' }));\r\nexpressApp.use(bodyParser.urlencoded({ extended: true, limit: '500mb' }));\r\nexpressApp.use(upload.array());\r\nvar schedule = __webpack_require__(/*! node-schedule */ \"node-schedule\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nconst memoryStore = DIContainer_1.DI.get(express_session_1.MemoryStore);\r\ndotenv_1.default.config();\r\nclass Main {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.dbConnection = DIContainer_1.DI.get(DBConnection_1.DBConnection);\r\n    }\r\n    initializeApplication() {\r\n        this.registerControllers();\r\n        this.startServer();\r\n        init_models_1.initModels(this.dbConnection.connection);\r\n    }\r\n    initializeRepositories() {\r\n    }\r\n    registerControllers() {\r\n        const baseUrl = process.env.BASE_URL;\r\n        this.initializeRepositories();\r\n        expressApp.use(express_session_1.default({\r\n            secret: 'mySecret',\r\n            resave: false,\r\n            saveUninitialized: true,\r\n            store: memoryStore\r\n        }));\r\n        expressApp.use(cors_1.default());\r\n        expressApp.use(bodyParser.urlencoded({ extended: true }));\r\n        expressApp.use(bodyParser.json());\r\n        expressApp.use((req, res, next) => {\r\n            DIContainer_1.DI.destroy();\r\n            next();\r\n        });\r\n        expressApp.use(`${baseUrl}/auth`, DIContainer_1.DI.get(AuthController_1.AuthController).getRouter());\r\n        expressApp.use(`${baseUrl}/out/bless-downstream`, DIContainer_1.DI.get(DownStreamController_1.DownStreamController).getRouter());\r\n        expressApp.use(`${baseUrl}/vendor`, DIContainer_1.DI.get(ShipmentController_1.ShipmentController).getRouter());\r\n        expressApp.use(DIContainer_1.DI.get(ErrorHandler_1.ErrorHandler).errorHandler);\r\n    }\r\n    startServer() {\r\n        expressApp.listen(process.env.PORT, () => {\r\n            this.logger.log('Application Server Started', process.env.PORT);\r\n            let expTmsService = DIContainer_1.DI.get(ExpTmsService_1.ExpTmsService);\r\n            let llpToClient2Service = DIContainer_1.DI.get(LlpClien2Service_1.LlpClien2Service);\r\n            let lobsterService = DIContainer_1.DI.get(LobsterService_1.LobsterService);\r\n            var llpToTms = cron.job(process.env.CRON1, () => __awaiter(this, void 0, void 0, function* () {\r\n                yield expTmsService.ExpDhl();\r\n                this.logger.log('cron Execution Success for LLP to TMS');\r\n            }));\r\n            var llpToClient2 = cron.job(process.env.CRON2, () => __awaiter(this, void 0, void 0, function* () {\r\n                yield llpToClient2Service.clientTmsResponse();\r\n                this.logger.log('cron Execution Success for LLP to CLIENT2');\r\n            }));\r\n            var client2ToLob = cron.job(process.env.CRON3, () => __awaiter(this, void 0, void 0, function* () {\r\n                yield lobsterService.postTmsResponseToLobster();\r\n                this.logger.log('cron Execution Success for CLIENT2 to Lobster');\r\n            }));\r\n            if (process.env.LLP_TMS_CRON == \"ON\") {\r\n                llpToTms.start();\r\n            }\r\n            else if (process.env.LLP_TMS_CRON == \"OFF\") {\r\n                llpToTms.stop();\r\n            }\r\n            if (process.env.LLP_CLIENT2_CRON == \"ON\") {\r\n                llpToClient2.start();\r\n            }\r\n            else if (process.env.LLP_CLIENT2_CRON == \"OFF\") {\r\n                llpToClient2.stop();\r\n            }\r\n            if (process.env.CLIENT2_LOBSTER_CRON == \"ON\") {\r\n                client2ToLob.start();\r\n            }\r\n            else if (process.env.CLIENT2_LOBSTER_CRON == \"OFF\") {\r\n                client2ToLob.stop();\r\n            }\r\n            //nodeApis.start();\r\n            //cronApis.start();\r\n        });\r\n    }\r\n}\r\nconst app = DIContainer_1.DI.get(Main);\r\napp.initializeApplication();\r\nfunction onComplete(arg0, onComplete) {\r\n    throw new Error('Function not implemented.');\r\n}\r\nfunction elseif() {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/main.ts?");

/***/ }),

/***/ "./src/response/BaseResponse.ts":
/*!**************************************!*\
  !*** ./src/response/BaseResponse.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ResponseCode = exports.ResponseStatus = exports.BaseResponse = void 0;\r\nclass BaseResponse {\r\n    constructor(status) {\r\n        this.status = new ResponseStatus(ResponseCode.WARNING, 'Response Status Not Changed');\r\n        this.status = status !== undefined && status !== null ? status : this.status;\r\n    }\r\n}\r\nexports.BaseResponse = BaseResponse;\r\nclass ResponseStatus {\r\n    constructor(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n    }\r\n}\r\nexports.ResponseStatus = ResponseStatus;\r\nvar ResponseCode;\r\n(function (ResponseCode) {\r\n    ResponseCode[\"SUCCESS\"] = \"SUCCESS\";\r\n    ResponseCode[\"WARNING\"] = \"WARNING\";\r\n    ResponseCode[\"FAILURE\"] = \"FAILURE\";\r\n})(ResponseCode = exports.ResponseCode || (exports.ResponseCode = {}));\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/response/BaseResponse.ts?");

/***/ }),

/***/ "./src/security/VerifyJwtTokenService.ts":
/*!***********************************************!*\
  !*** ./src/security/VerifyJwtTokenService.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VerifyJwtTokenService = void 0;\r\nconst jsonwebtoken_1 = __importDefault(__webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\"));\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\n// const config = require('../config/config.js');\r\nclass VerifyJwtTokenService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    verifyToken(req, res, next) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let bearerHeader = req.headers['authorization'];\r\n            console.log('auth', bearerHeader);\r\n            let token = '';\r\n            if (bearerHeader != undefined) {\r\n                token = bearerHeader.split(\" \")[1];\r\n            }\r\n            console.log('verifying jwt', token);\r\n            if (!token) {\r\n                return res.status(403).send({\r\n                    auth: false, message: 'No token provided.'\r\n                });\r\n            }\r\n            let key = process.env.KEY;\r\n            jsonwebtoken_1.default.verify(token, key, (err, authData) => {\r\n                if (err) {\r\n                    return res.status(403).send({\r\n                        auth: false,\r\n                        message: 'Invalid Token'\r\n                    });\r\n                }\r\n                authData;\r\n                next();\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.VerifyJwtTokenService = VerifyJwtTokenService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/security/VerifyJwtTokenService.ts?");

/***/ }),

/***/ "./src/service/AuthService.ts":
/*!************************************!*\
  !*** ./src/service/AuthService.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AuthService = void 0;\r\nconst jsonwebtoken_1 = __importDefault(__webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\"));\r\nconst bluebird_1 = __webpack_require__(/*! bluebird */ \"bluebird\");\r\nclass AuthService {\r\n    constructor() {\r\n    }\r\n    generateJWTToken(user) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            console.log(`GENRATING TOKEN`);\r\n            let key = process.env.KEY;\r\n            let token = jsonwebtoken_1.default.sign(user, key, {\r\n                expiresIn: '365d'\r\n            });\r\n            console.log(`Token is ${token}`);\r\n            return token;\r\n            bluebird_1.resolve(new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                let key = process.env.KEY;\r\n                let token = jsonwebtoken_1.default.sign(user, key, {\r\n                    expiresIn: 86400\r\n                });\r\n                resolve({ user: user, accessToken: token });\r\n            })));\r\n        });\r\n    }\r\n    static verifyToken(req, res, next) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let bearerHeader = req.headers['authorization'];\r\n            console.log('auth', bearerHeader);\r\n            let token = '';\r\n            if (bearerHeader != undefined) {\r\n                token = bearerHeader.split(\" \")[1];\r\n            }\r\n            console.log('verifying jwt', token);\r\n            if (!token) {\r\n                return res.status(403).send({\r\n                    auth: false, message: 'No token provided.'\r\n                });\r\n            }\r\n            let key = process.env.KEY;\r\n            jsonwebtoken_1.default.verify(token, key, (err, authData) => {\r\n                if (err) {\r\n                    return res.status(403).send({\r\n                        auth: false,\r\n                        message: 'Invalid Token'\r\n                    });\r\n                }\r\n                authData;\r\n                next();\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.AuthService = AuthService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/AuthService.ts?");

/***/ }),

/***/ "./src/service/DataGenTransformationService.ts":
/*!*****************************************************!*\
  !*** ./src/service/DataGenTransformationService.ts ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DataGenTransformationService = void 0;\r\n///import { ForwardingRepository } from \"../data/repository/ForwardingRepository\";\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst AuthService_1 = __webpack_require__(/*! ./AuthService */ \"./src/service/AuthService.ts\");\r\nconst UtilityService_1 = __webpack_require__(/*! ./UtilityService */ \"./src/service/UtilityService.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\n//import { MawbMainRepository } from '../data/repository/MawbMainRepository';\r\nconst MessagingService_1 = __webpack_require__(/*! ./MessagingService */ \"./src/service/MessagingService.ts\");\r\nconst VendorBookingRepository_1 = __webpack_require__(/*! ../data/repository/VendorBookingRepository */ \"./src/data/repository/VendorBookingRepository.ts\");\r\nclass DataGenTransformationService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.authService = DIContainer_1.DI.get(AuthService_1.AuthService);\r\n        this.utilityService = DIContainer_1.DI.get(UtilityService_1.UtilityService);\r\n        this.ExpResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n        this.MessagingService = DIContainer_1.DI.get(MessagingService_1.MessagingService);\r\n        this.vendorBookingRepository = DIContainer_1.DI.get(VendorBookingRepository_1.VendorBookingRepository);\r\n    }\r\n    dataGenTransformation(msgType) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let fianlPublishMessage;\r\n            if (msgType === process.env.DATAGEN_TMS_RESP_MSG) {\r\n                fianlPublishMessage = yield this.expTmsLlpClient2(msgType);\r\n            } //Similary use cases to implement other DatagenMessage \r\n            console.log(\"fianlPublishMessage--------->\", fianlPublishMessage);\r\n            //Sending the Final Datagen messages Array to Message Service\r\n            yield this.MessagingService.publishMessageToDataGen(fianlPublishMessage);\r\n        });\r\n    }\r\n    //Transformation service to build TMS RESPONSE data which is intended to send from LLP to CLIENT2\r\n    expTmsLlpClient2(msgType) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            var tmsResponseList = yield this.ExpResponseDataRepository.get({ 'status': \"UNPROCESSED\" });\r\n            //console.log(\"Unprocessed responses--->\",tmsResponseList)\r\n            console.log(\"msgType------->\", msgType);\r\n            //BLESS Datagen variables\r\n            let messagePrimary = process.env.DATAGEN_TMS_RESP_PRIMARY_RECEIVER;\r\n            let issuer = process.env.DATAGEN_TMS_RESP_SENDER;\r\n            let BLESS_datagen_appId = process.env.DATAGEN_TMS_RESP_APP_ID;\r\n            let fianlPublishMessage = [];\r\n            let objJsonB64;\r\n            let vendBkngItem;\r\n            try {\r\n                for (let tmsReponseItem of tmsResponseList) {\r\n                    //Update the status in the response table of LLP to IN-PROGRESS. So that no other process picks the same record\r\n                    //let tmsReponseItem = tmsResponseList[0]\r\n                    this.logger.log(\"customer_order_number-------->\", tmsReponseItem[\"customer_order_number\"]);\r\n                    //await this.ExpResponseDataRepository.update({ \"customer_order_number\":tmsReponseItem[\"customer_order_number\"] }, { \"status\": \"IN-PROGRESS\" });\r\n                    vendBkngItem = yield this.vendorBookingRepository.get({ \"customer_order_number\": tmsReponseItem[\"customer_order_number\"] });\r\n                    let objJsonStr = JSON.parse(JSON.stringify(tmsReponseItem));\r\n                    //Adding Bless Identity Fields\r\n                    objJsonStr['msgType'] = msgType;\r\n                    objJsonStr[\"CustomerOrderNumber\"] = vendBkngItem[0][\"customer_order_number\"];\r\n                    objJsonStr[\"PlannedShippingDateTime\"] = vendBkngItem[0][\"planned_shipping_date_and_time\"];\r\n                    objJsonStr[\"ShipmentCreationDateTime\"] = vendBkngItem[0][\"shipment_creation_date_time\"];\r\n                    //console.log(\"objJsonStr------->\", objJsonStr)\r\n                    //Converting the response[i] to base64 formate\r\n                    objJsonB64 = Buffer.from(JSON.stringify({ \"body\": objJsonStr })).toString(\"base64\");\r\n                    //console.log(\"objJsonB64------->\", objJsonB64)\r\n                    let publishMessage = {};\r\n                    var vcId = yield this.utilityService.genVcid(issuer, messagePrimary, BLESS_datagen_appId);\r\n                    //console.log(\"vcId----->\", vcId)\r\n                    publishMessage['receivers'] = {};\r\n                    publishMessage['id'] = vcId;\r\n                    publishMessage['msgType'] = process.env.DATAGEN_TMS_RESP_MSG;\r\n                    publishMessage['audience'] = process.env.DATAGEN_TMS_RESP_AUDIENCE;\r\n                    publishMessage['receivers']['primary'] = [messagePrimary];\r\n                    publishMessage['receivers']['secondary'] = [];\r\n                    publishMessage['primary'] = true;\r\n                    publishMessage['applicationId'] = BLESS_datagen_appId;\r\n                    publishMessage['sender'] = issuer;\r\n                    publishMessage['issueTimeFLag'] = true;\r\n                    publishMessage['payloads'] = [objJsonB64];\r\n                    fianlPublishMessage.push(publishMessage);\r\n                    //Update the status in the response table of LLP \r\n                    // this.logger.log(\"BEFORE UPDATE RES TABLE\",tmsReponseItem[\"customer_order_number\"])\r\n                    const whereObj = { \"customer_order_number\": tmsReponseItem[\"customer_order_number\"] };\r\n                    const updateObj = { status: \"PROCESSED\" };\r\n                    this.logger.log(\"AFTER DATAGEN RES TABLES---->\", whereObj, updateObj);\r\n                    yield this.ExpResponseDataRepository.update(whereObj, updateObj);\r\n                }\r\n                //console.log(\"fianlPublishMessage------->\", fianlPublishMessage)\r\n                return fianlPublishMessage;\r\n            }\r\n            catch (error) {\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.DataGenTransformationService = DataGenTransformationService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/DataGenTransformationService.ts?");

/***/ }),

/***/ "./src/service/DownStreamService.ts":
/*!******************************************!*\
  !*** ./src/service/DownStreamService.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DownStreamService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpTmsDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpTmsDataRepository */ \"./src/data/repository/ExpTmsDataRepository.ts\");\r\nconst bluebird_1 = __webpack_require__(/*! bluebird */ \"bluebird\");\r\nconst GenericUtil_1 = __webpack_require__(/*! ../util/GenericUtil */ \"./src/util/GenericUtil.ts\");\r\nconst FileUtil_1 = __webpack_require__(/*! ../util/FileUtil */ \"./src/util/FileUtil.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nconst UpdateCoreTablesService_1 = __webpack_require__(/*! ./UpdateCoreTablesService */ \"./src/service/UpdateCoreTablesService.ts\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nconst VendorBookingRepository_1 = __webpack_require__(/*! ../data/repository/VendorBookingRepository */ \"./src/data/repository/VendorBookingRepository.ts\");\r\nconst AddressRepository_1 = __webpack_require__(/*! ../data/repository/AddressRepository */ \"./src/data/repository/AddressRepository.ts\");\r\nconst LobsterTransformationService_1 = __webpack_require__(/*! ./LobsterTransformationService */ \"./src/service/LobsterTransformationService.ts\");\r\nconst DataGenTransformationService_1 = __webpack_require__(/*! ../service/DataGenTransformationService */ \"./src/service/DataGenTransformationService.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nclass DownStreamService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.ExpTmsDataRepository = DIContainer_1.DI.get(ExpTmsDataRepository_1.ExpTmsDataRepository);\r\n        this.ExpResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n        this.UpdateCoreTablesService = DIContainer_1.DI.get(UpdateCoreTablesService_1.UpdateCoreTablesService);\r\n        this.LobsterTransformationService = DIContainer_1.DI.get(LobsterTransformationService_1.LobsterTransformationService);\r\n        this.AddressRepository = DIContainer_1.DI.get(AddressRepository_1.AddressRepository);\r\n        this.VendorBoookingRepository = DIContainer_1.DI.get(VendorBookingRepository_1.VendorBookingRepository);\r\n        this.DataGenTransformationService = DIContainer_1.DI.get(DataGenTransformationService_1.DataGenTransformationService);\r\n        this.genericUtil = DIContainer_1.DI.get(GenericUtil_1.GenericUtil);\r\n        this.fileUtil = DIContainer_1.DI.get(FileUtil_1.FileUtil);\r\n    }\r\n    expBookingReqDownStreamHandler(message) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const token = GenericUtil_1.GenericUtil.generateRandomHash();\r\n            //Remove extraneous fields i.e plannedShipmentDate and plannedShipmentOffset fields\r\n            delete message[\"plannedShippingDate\"];\r\n            delete message[\"plannedShippingOffset\"];\r\n            delete message[\"\"];\r\n            //Insert Exp-Booking Request Data in exp_tms_data Table\r\n            yield this.ExpTmsDataRepository.create({\r\n                \"message\": message,\r\n                \"shipment_Tracking_Number\": \"\",\r\n                \"status\": \"UNPROCESSED\",\r\n                \"token\": token\r\n            });\r\n            return token;\r\n        });\r\n    }\r\n    expBookingResponseDownStreamHandler(message) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const token = GenericUtil_1.GenericUtil.generateRandomHash();\r\n            //Insert Exp-Booking Response Data in `exp_response_data` Table\r\n            yield this.ExpResponseDataRepository.create({\r\n                \"message\": message,\r\n                \"shipment_Tracking_Number\": message[\"shipmentTrackingNumber\"],\r\n                \"status\": \"UNPROCESSED\",\r\n                \"token\": token\r\n            });\r\n            return token;\r\n        });\r\n    }\r\n    publishToEXpTMS() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                //Get all the EXP Booking Request Messages which are not sent to EXP TMS system i.e {\"status\":\"UNPROCESSED\"}\r\n                const expBookingReqList = yield this.ExpTmsDataRepository.get({ \"status\": \"UNPROCESSED\" });\r\n                let expTmsResponse = [];\r\n                let options = {\r\n                    'method': 'POST',\r\n                    'url': process.env.POST_URL,\r\n                    'headers': {\r\n                        'Authorization': process.env.EXP_TMS_AUTH,\r\n                        'Content-Type': 'application/json',\r\n                        'Cookie': 'BIGipServer~WSB~pl_wsb-express-cbj.dhl.com_443=293349575.64288.0000'\r\n                    },\r\n                    body: \"\"\r\n                };\r\n                for (let expBookingReqItem of expBookingReqList) {\r\n                    options[\"body\"] = JSON.stringify(expBookingReqItem);\r\n                    expTmsResponse = yield request(options, function (error, response) {\r\n                        if (error)\r\n                            throw new Error(error);\r\n                        response = {\r\n                            statusCode: response.statusCode,\r\n                            data: response.body\r\n                        };\r\n                        console.log(\"Response from EXP TMS System: \", response);\r\n                        bluebird_1.resolve({ res: response });\r\n                    });\r\n                    //Insert EXP_TMS-Response into `exp_response_data` table\r\n                    yield this.ExpResponseDataRepository.create({ \"message\": \"\" });\r\n                }\r\n            }\r\n            catch (e) {\r\n                //resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } })\r\n            }\r\n        });\r\n    }\r\n    consumeTMSResponse(expResponseItem) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let expRespCreateObj = { \"customer_order_number\": expResponseItem[\"customer_order_number\"], \"message\": expResponseItem[\"message\"], \"shipmentTrackingNumber\": expResponseItem[\"shipmentTrackingNumber\"], status: \"UNPROCESSED\", \"statusCode\": expResponseItem[\"statusCode\"], \"parent_uuid\": expResponseItem[\"parent_uuid\"] };\r\n            //Update Core Tables\r\n            var dataObj = expResponseItem;\r\n            console.log(\"dataObj\", dataObj);\r\n            var updateDocument = yield this.UpdateCoreTablesService.updateTmsResCoreTables(dataObj);\r\n            return yield this.ExpResponseDataRepository.create(expRespCreateObj);\r\n        });\r\n    }\r\n    /*\r\n        DownStream Service to send EXP Message to TMS System(From LLP Node) & Persisting the TMS Response\r\n    */\r\n    downStreamToTmsSystem(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let message;\r\n            let customerOrderNumber;\r\n            try {\r\n                this.logger.log(\"Request---------->/n/n\", req);\r\n                message = JSON.parse(Buffer.from(req, 'base64').toString('utf-8')).body;\r\n                this.logger.log(\"Data after converting base64---->/n/n\", message);\r\n                customerOrderNumber = message.principalRef + \"\";\r\n                const token = GenericUtil_1.GenericUtil.generateRandomHash();\r\n                //Creating the Data Object from exp_tms_data table and Persisting the Data\r\n                var tmsDataobj = {\r\n                    status: \"UNPROCESSED\",\r\n                    shipment_Tracking_Number: \"\",\r\n                    message: message,\r\n                    customer_order_number: customerOrderNumber,\r\n                    token: token\r\n                };\r\n                //this.logger.log(\"Object\", tmsDataobj)\r\n                yield this.ExpTmsDataRepository.create(tmsDataobj);\r\n                //Remove the extraneous fields from message\r\n                delete message[\"plannedShippingOffset\"];\r\n                delete message[\"plannedShippingDate\"];\r\n                delete message[\"sequence_timestamp\"];\r\n                delete message[\"vcid\"];\r\n                delete message[\"principalRef\"];\r\n                delete message[\"shipper_account_number\"];\r\n                delete message[\"trailToken\"];\r\n                //this.logger.log(\"Message after deleteing-------->/n/n\",message);\r\n                //Creating the Data Object from tms data and calling TMS URL\r\n                var options = {\r\n                    'method': 'POST',\r\n                    'url': process.env.POST_URL,\r\n                    'headers': {\r\n                        'Authorization': 'Basic ZGhsYmxlc3NibG9DSDpDJDJhTyExbkMhMmVWQDhr',\r\n                        'Content-Type': 'application/json',\r\n                        'Cookie': 'BIGipServer~WSB~pl_wsb-express-cbj.dhl.com_443=293349575.64288.0000'\r\n                    },\r\n                    body: JSON.stringify(message)\r\n                };\r\n                //Write the request to file\r\n                console.log(\"MESSAGE------------------------------------------------------>\", JSON.stringify(message));\r\n                const fileName = GenericUtil_1.GenericUtil.generateHash(JSON.stringify(message));\r\n                const filePath = process.env.REQ_TO_TMS_FILE_PATH + fileName + '.txt';\r\n                this.fileUtil.writeToFile(filePath, JSON.stringify(message));\r\n                this.logger.log(`filePath is -----------------------------> ${filePath}`);\r\n                this.logger.log(`fileName is -----------------------------> ${fileName}`);\r\n                //this.logger.log(\"OPTIONS---->\\n\\n\",options)\r\n                yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (error)\r\n                        throw new Error(error);\r\n                    var expres = {\r\n                        statusCode: response.statusCode,\r\n                        message: response.body,\r\n                        shipmentTrackingNumber: JSON.parse(response.body).shipmentTrackingNumber,\r\n                        status: \"UNPROCESSED\",\r\n                        customer_order_number: customerOrderNumber,\r\n                        req_file_path: filePath,\r\n                        req_file_uuid: fileName\r\n                    };\r\n                    this.logger.log(\"expres----->\\n\\n\", expres);\r\n                    //this.logger.log(\"Response-------->\\n\\n\",Buffer.from(JSON.stringify({\"body\":expres})).toString(\"base64\"))\r\n                    //Save expResponse in `exp_response_data` table along with shipment_Tracking_Number\r\n                    yield this.ExpResponseDataRepository.create(expres);\r\n                    //Update Core Tables\r\n                    yield this.UpdateCoreTablesService.updateTmsResCoreTables(expres);\r\n                    //Update exp_tms_data with shipment_Tracking_Number\r\n                    let whereObj = { \"customer_order_number\": customerOrderNumber };\r\n                    //this.logger.log(\"WhereOBJ---->\\n\\n\",whereObj)\r\n                    yield this.ExpTmsDataRepository.update(whereObj, {\r\n                        shipment_Tracking_Number: JSON.parse(response.body).shipmentTrackingNumber,\r\n                        status: \"PROCESSED\"\r\n                    });\r\n                    // Datagen service Sends TMS-Resp from LLP to Client2\r\n                    const updateObj = { status: \"PROCESSED\" };\r\n                    yield this.DataGenTransformationService.dataGenTransformation(process.env.DATAGEN_TMS_RESP_MSG);\r\n                    // this.logger.log(\"AFTER DATAGEN RES TABLES---->\",whereObj,updateObj)\r\n                    //await this.ExpResponseDataRepository.update( whereObj, updateObj );\r\n                    // this.logger.log(\"updateStatus----------->\",updateStatus)\r\n                }));\r\n                // let whereObj = { \"customer_order_number\":customerOrderNumber}\r\n                // let updateObj = { status: \"PROCESSED\" }\r\n                // this.logger.log(\"AFTER DATAGEN RES TABLES---->\",whereObj,updateObj);\r\n                // await this.ExpResponseDataRepository.update(whereObj,updateObj);\r\n                return token;\r\n            }\r\n            catch (error) {\r\n                //resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } })\r\n                //Update processing_status of events table to ERROR\r\n                console.log(\"Error----->\", error);\r\n                //await this.ExpResponseDataRepository.update({ \"customer_order_number\" : customerOrderNumber }, { \"status\": \"ERROR\", \"error_reason\": error });\r\n                bluebird_1.resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: error } });\r\n            }\r\n        });\r\n    }\r\n    /*\r\n        DownStream Service to send TMS Response to LOBSTER System & Persisting the LOBSTER Response\r\n    */\r\n    downStreamToLobsterSystem(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let baseMessage;\r\n            try {\r\n                baseMessage = JSON.parse(Buffer.from(req, 'base64').toString('utf-8')).body;\r\n                this.logger.log(\"Data after converting base64---->/n/n\", baseMessage);\r\n                var conMessage;\r\n                const token = GenericUtil_1.GenericUtil.generateRandomHash();\r\n                var expres = {\r\n                    statusCode: baseMessage.statusCode,\r\n                    message: baseMessage.message,\r\n                    shipmentTrackingNumber: baseMessage.shipmentTrackingNumber,\r\n                    status: \"UNPROCESSED\",\r\n                    customer_order_number: baseMessage.customer_order_number\r\n                };\r\n                //Update Core Tables\r\n                var updateDocument = yield this.UpdateCoreTablesService.updateTmsResCoreTables(expres);\r\n                //Derive accountNumber to be sent to LOSTER system\r\n                this.logger.log(\"baseMessage.customer_order_number-------->\\n\\n\", baseMessage.customer_order_number);\r\n                let vendorOrderItem = (yield this.VendorBoookingRepository.get({ \"customer_order_number\": baseMessage.customer_order_number }));\r\n                if (vendorOrderItem.length > 0) {\r\n                    var id = vendorOrderItem[0][\"id\"];\r\n                }\r\n                else {\r\n                    //Save Error Message to exp_response_data table\r\n                    yield this.ExpResponseDataRepository.update({ \"customer_order_number\": baseMessage.customer_order_number }, { \"status\": \"ERROR\", \"error_reason\": `No Vendor Booking Found with customer_order_number=${baseMessage[\"customer_order_number\"]}` });\r\n                    //continue;\r\n                }\r\n                let addressList = yield this.AddressRepository.get({ \"address_type\": \"CONSIGNOR\", \"customer_order_number\": baseMessage.customer_order_number });\r\n                let accountNumber;\r\n                this.logger.log(\"Account List\", addressList);\r\n                this.logger.log(\"Account Number is from List\", addressList[0][\"address_id\"]);\r\n                // this.logger.log(\"Estimated Date---->\",JSON.parse(baseMessage.message).estimatedDeliveryDate.estimatedDeliveryDate)\r\n                if (addressList.length > 0) {\r\n                    accountNumber = addressList[0][\"address_id\"];\r\n                }\r\n                else {\r\n                    accountNumber = \"\";\r\n                }\r\n                this.logger.log(`Account Number is ${accountNumber}`);\r\n                //Construct final Lobster POST message\r\n                if (baseMessage.statusCode == 201) {\r\n                    var successMessage = {\r\n                        \"content\": {\r\n                            \"accountNumber\": accountNumber,\r\n                            \"HAWB\": baseMessage.shipmentTrackingNumber,\r\n                            \"PrincipalreferenceNumber\": baseMessage.customer_order_number,\r\n                            \"documents\": JSON.parse(baseMessage.message).documents,\r\n                            \"estimatedDeliveryDate\": JSON.parse(baseMessage.message).estimatedDeliveryDate.estimatedDeliveryDate\r\n                        }\r\n                    };\r\n                    this.logger.log(\"message----->\\n\\n\", successMessage);\r\n                    conMessage = yield this.LobsterTransformationService.lobData(successMessage);\r\n                }\r\n                else {\r\n                    //Removing extraneous fields in the error message\r\n                    var errorBody = JSON.parse(baseMessage.message);\r\n                    delete errorBody[\"instance\"];\r\n                    delete errorBody[\"message\"];\r\n                    var errorMessage = {\r\n                        \"content\": {\r\n                            \"accountNumber\": accountNumber,\r\n                            \"HAWB\": baseMessage.shipmentTrackingNumber,\r\n                            \"PrincipalreferenceNumber\": baseMessage.customer_order_number,\r\n                            \"documents\": JSON.parse(baseMessage.message).documents,\r\n                            \"estimatedDeliveryDate\": \"null\"\r\n                        },\r\n                        \"error\": errorBody\r\n                    };\r\n                    this.logger.log(\"errorMessage--->\", errorMessage);\r\n                    conMessage = yield this.LobsterTransformationService.lobData(errorMessage, true);\r\n                }\r\n                this.logger.log(\"conMessage---->\", conMessage);\r\n                const fileName = GenericUtil_1.GenericUtil.generateHash(JSON.stringify(conMessage.tdata));\r\n                const filePath = process.env.REQ_TO_LOBSTER_FILE_PATH + fileName + '.txt';\r\n                this.fileUtil.writeToFile(filePath, JSON.stringify(conMessage.tdata));\r\n                this.logger.log(`filePath is ${filePath}`);\r\n                var options = {\r\n                    'method': 'POST',\r\n                    'url': process.env.LOBSTER_POST_URL,\r\n                    'headers': {\r\n                        'Authorization': 'Basic QkxFU1NfVEVTVDpUMCNmIWI4PTVR',\r\n                        'Content-Type': 'text/plain'\r\n                    },\r\n                    body: JSON.stringify(conMessage.tdata)\r\n                };\r\n                // this.logger.log(`Lobster Options is ${JSON.stringify(options)}`);\r\n                var result = yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                    if (error)\r\n                        throw new Error(error);\r\n                    //Save response from Lobster system to exp_response table\r\n                    this.logger.log(\"response----->\", response.body);\r\n                    var expResponse = yield this.ExpResponseDataRepository.update({ \"customer_order_number\": baseMessage.customer_order_number }, { \"status\": response.body, \"token\": token, \"req_file_path\": filePath, \"req_file_uuid\": fileName }); //, \"request\": JSON.stringify(options)\r\n                    //this.logger.log(\"Response---->\", expResponse)\r\n                }));\r\n                return token;\r\n                //}\r\n            }\r\n            catch (error) {\r\n                //Update processing_status of events table to ERROR\r\n                console.log(\"Error----->\", error);\r\n                //await this.ExpResponseDataRepository.update({ \"customer_order_number\":baseMessage.customer_order_number }, { \"status\": \"ERROR\", \"error_reason\": error });\r\n                bluebird_1.resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: error } });\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.DownStreamService = DownStreamService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/DownStreamService.ts?");

/***/ }),

/***/ "./src/service/ExpResponseDataService.ts":
/*!***********************************************!*\
  !*** ./src/service/ExpResponseDataService.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpResponseDataService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nclass ExpResponseDataService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.ExpResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n    }\r\n    expResData(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    console.log('Request Body inside ExpResponseDataService', req);\r\n                    var status = req.res.statusCode;\r\n                    var data = req.res.data;\r\n                    var data1 = JSON.parse(data);\r\n                    var shipmentTrackingNumber = data1.shipmentTrackingNumber;\r\n                    var obj;\r\n                    if (status == 201) {\r\n                        obj = {\r\n                            statusCode: status,\r\n                            status: \"UNPROCESSED\",\r\n                            shipmentTrackingNumber: shipmentTrackingNumber,\r\n                            message: data\r\n                        };\r\n                    }\r\n                    console.log(\"Object\", obj);\r\n                    var result = yield this.ExpResponseDataRepository.create(obj);\r\n                    console.log(\"Result\", result);\r\n                    resolve({ res: result });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    getexpResData(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                let whereObj = {};\r\n                try {\r\n                    console.log('Request Body inside ExpResponseDataService', req);\r\n                    whereObj['shipmentTrackingNumber'] = req;\r\n                    whereObj['status'] = \"UNPROCESSED\";\r\n                    let responseData = yield this.ExpResponseDataRepository.get(whereObj);\r\n                    //console.log(\"Result\",responseData)                           \r\n                    resolve(responseData);\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n}\r\nexports.ExpResponseDataService = ExpResponseDataService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/ExpResponseDataService.ts?");

/***/ }),

/***/ "./src/service/ExpTmsService.ts":
/*!**************************************!*\
  !*** ./src/service/ExpTmsService.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ExpTmsService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpTmsDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpTmsDataRepository */ \"./src/data/repository/ExpTmsDataRepository.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nconst UpdateCoreTablesService_1 = __webpack_require__(/*! ./UpdateCoreTablesService */ \"./src/service/UpdateCoreTablesService.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass ExpTmsService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.ExpTmsDataRepository = DIContainer_1.DI.get(ExpTmsDataRepository_1.ExpTmsDataRepository);\r\n        this.ExpResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n        this.UpdateCoreTablesService = DIContainer_1.DI.get(UpdateCoreTablesService_1.UpdateCoreTablesService);\r\n    }\r\n    /*\r\n        Send EXP Message to TMS System(From LLP Node) & Persisting the TMS Response\r\n    */\r\n    ExpDhl() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    //Take data from exp_tms_data table and assign to tmsDataList variable\r\n                    var tmsDataList = yield this.getAllExpTmsData();\r\n                    //console.log(\"tmsDataList\",tmsDataList.res, tmsDataList.res.length)\r\n                    for (let i = 0; i <= tmsDataList.res.length; i++) {\r\n                        //Loop through tmsDataList variable and get individual message i.e tmsDataItem[\"message\"]\r\n                        var message = tmsDataList.res[i].dataValues.message;\r\n                        //console.log(\"customerOrderNumber---------->\",tmsDataList.res[i].dataValues.message.principalRef)\r\n                        let customerOrderNumber = tmsDataList.res[i].dataValues.message.principalRef + \"\";\r\n                        console.log(\"customerOrderNumber\", customerOrderNumber);\r\n                        //Remove the extraneous fields from message\r\n                        delete message[\"plannedShippingOffset\"];\r\n                        delete message[\"plannedShippingDate\"];\r\n                        delete message[\"sequence_timestamp\"];\r\n                        delete message[\"vcid\"];\r\n                        delete message[\"principalRef\"];\r\n                        delete message[\"shipper_account_number\"];\r\n                        delete message[\"trailToken\"];\r\n                        // console.log(\"Message\", JSON.stringify(message));\r\n                        var options = {\r\n                            'method': 'POST',\r\n                            'url': process.env.POST_URL,\r\n                            'headers': {\r\n                                'Authorization': 'Basic ZGhsYmxlc3NibG9DSDpDJDJhTyExbkMhMmVWQDhr',\r\n                                'Content-Type': 'application/json',\r\n                                'Cookie': 'BIGipServer~WSB~pl_wsb-express-cbj.dhl.com_443=293349575.64288.0000'\r\n                            },\r\n                            body: JSON.stringify(message)\r\n                        };\r\n                        let resultList = [];\r\n                        //console.log(\"OPTIONS---->\",options)\r\n                        var result = yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                            if (error)\r\n                                throw new Error(error);\r\n                            //console.log(\"response--->\",response.body)\r\n                            console.log(\"shipmentTrackingNumber----->\", JSON.parse(response.body).shipmentTrackingNumber);\r\n                            // console.log(`Reponse from TMS system is ${response.body}`);\r\n                            var expres = {\r\n                                statusCode: response.statusCode,\r\n                                message: response.body,\r\n                                shipmentTrackingNumber: JSON.parse(response.body).shipmentTrackingNumber,\r\n                                status: \"UNPROCESSED\",\r\n                                parent_uuid: tmsDataList.res[i].dataValues.uuid,\r\n                                customer_order_number: customerOrderNumber\r\n                            };\r\n                            console.log(\"expres----->\", expres);\r\n                            //Save expResponse in `exp_response_data` table along with shipment_Tracking_Number\r\n                            var expResponse = yield this.ExpResponseDataRepository.create(expres);\r\n                            //Update Core Tables\r\n                            var updateDocument = yield this.UpdateCoreTablesService.updateTmsResCoreTables(expres);\r\n                            //Update exp_tms_data with shipment_Tracking_Number\r\n                            var whereObj = { \"id\": tmsDataList.res[i].dataValues.id };\r\n                            var updateRes = yield this.ExpTmsDataRepository.update(whereObj, {\r\n                                shipment_Tracking_Number: JSON.parse(response.body).shipmentTrackingNumber,\r\n                                status: \"PROCESSED\"\r\n                            });\r\n                        }));\r\n                    }\r\n                    resolve({ status: { code: 'Success' } });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    //INNER FUNCTION FOR LLP-TMS//\r\n    getAllExpTmsData() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                let whereObj = {};\r\n                try {\r\n                    //console.log('Request Body inside ExpTmsService', req)\r\n                    //whereObj['shipment_Tracking_Number'] = req;\r\n                    whereObj['status'] = \"UNPROCESSED\";\r\n                    let responseData = yield this.ExpTmsDataRepository.get(whereObj);\r\n                    //console.log(\"Result\", responseData)\r\n                    resolve({ res: responseData });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    // To get TMS DATA\r\n    expTmsData(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    console.log('Request Body inside ExpTmsService', req);\r\n                    var status = req.statusCode;\r\n                    var data = req;\r\n                    var obj = {\r\n                        status: \"UNPROCESSED\",\r\n                        shipment_Tracking_Number: \"3732179850\",\r\n                        message: data\r\n                    };\r\n                    console.log(\"Object\", obj);\r\n                    var result = yield this.ExpTmsDataRepository.create(obj);\r\n                    console.log(\"Result\", result);\r\n                    resolve({ status: { code: 'SUCCESS' }, res: result });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    //NOT USED//\r\n    getexpTmsData(req, res) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                let whereObj = {};\r\n                try {\r\n                    //console.log('Request Body inside ExpTmsService', req)\r\n                    whereObj['uuid'] = req;\r\n                    console.log(\"Whereobj\", whereObj);\r\n                    //whereObj['status'] = \"UNPROCESSED\";\r\n                    let responseData = yield this.ExpTmsDataRepository.get(whereObj);\r\n                    //console.log(\"Result\", responseData)\r\n                    resolve({ res: responseData });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n}\r\nexports.ExpTmsService = ExpTmsService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/ExpTmsService.ts?");

/***/ }),

/***/ "./src/service/LlpClien2Service.ts":
/*!*****************************************!*\
  !*** ./src/service/LlpClien2Service.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LlpClien2Service = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass LlpClien2Service {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.ExpResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n    }\r\n    //LLP-CLIENT2//\r\n    clientTmsResponse() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            console.log(\"Inside ClientTMS\");\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    console.log(\"Test\");\r\n                    var tmsResponseList = yield this.ExpResponseDataRepository.get({ 'status': \"UNPROCESSED\" });\r\n                    console.log(\"tmsResponseList--->\", tmsResponseList);\r\n                    for (let tmsReponseItem of tmsResponseList) {\r\n                        //Loop through tmsDataList variable and get individual message i.e tmsDataItem[\"message\"]\r\n                        var message = { \"tmsResponse\": tmsReponseItem };\r\n                        console.log(\"Message\", message);\r\n                        var options = {\r\n                            'method': 'POST',\r\n                            'url': process.env.CLIENT2_URL,\r\n                            'headers': {\r\n                                //'Authorization': req.rawHeaders[1],\r\n                                'Content-Type': 'application/JSON'\r\n                            },\r\n                            body: JSON.stringify(message)\r\n                        };\r\n                        var result = yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                            if (error)\r\n                                throw new Error(error);\r\n                            //var expResponse = await this.ExpResponseDataRepository.update({ \"parent_uuid\": tmsReponseItem.parent_uuid }, { \"status\": \"PROCESSED\" });\r\n                        }));\r\n                    }\r\n                    resolve({ status: { code: 'Success' } });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n}\r\nexports.LlpClien2Service = LlpClien2Service;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/LlpClien2Service.ts?");

/***/ }),

/***/ "./src/service/LobsterService.ts":
/*!***************************************!*\
  !*** ./src/service/LobsterService.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LobsterService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst ExpResponseDataRepository_1 = __webpack_require__(/*! ../data/repository/ExpResponseDataRepository */ \"./src/data/repository/ExpResponseDataRepository.ts\");\r\nconst VendorBookingRepository_1 = __webpack_require__(/*! ../data/repository/VendorBookingRepository */ \"./src/data/repository/VendorBookingRepository.ts\");\r\nconst AddressRepository_1 = __webpack_require__(/*! ../data/repository/AddressRepository */ \"./src/data/repository/AddressRepository.ts\");\r\nconst LobsterTransformationService_1 = __webpack_require__(/*! ./LobsterTransformationService */ \"./src/service/LobsterTransformationService.ts\");\r\nconst EventsToLobsterRepository_1 = __webpack_require__(/*! ../data/repository/EventsToLobsterRepository */ \"./src/data/repository/EventsToLobsterRepository.ts\");\r\nconst EventsRepository_1 = __webpack_require__(/*! ../data/repository/EventsRepository */ \"./src/data/repository/EventsRepository.ts\");\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass LobsterService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.expResponseDataRepository = DIContainer_1.DI.get(ExpResponseDataRepository_1.ExpResponseDataRepository);\r\n        this.lobsterTransformationService = DIContainer_1.DI.get(LobsterTransformationService_1.LobsterTransformationService);\r\n        this.addressRepository = DIContainer_1.DI.get(AddressRepository_1.AddressRepository);\r\n        this.vendorBoookingRepository = DIContainer_1.DI.get(VendorBookingRepository_1.VendorBookingRepository);\r\n        this.eventsToLobsterRepository = DIContainer_1.DI.get(EventsToLobsterRepository_1.EventsToLobsterRepository);\r\n        this.eventsRepository = DIContainer_1.DI.get(EventsRepository_1.EventsRepository);\r\n    }\r\n    postTmsResponseToLobster() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    //Get all UNPROCESSED TMS Response Messages from exp_response_data table \r\n                    let tmsResponseList = yield this.expResponseDataRepository.get({ \"status\": \"UNPROCESSED\" });\r\n                    //Loop the UNPROCESSED rows and submit to LOBSTER SYSTEM\r\n                    for (let tmsReponseItem of tmsResponseList) {\r\n                        var resp = JSON.parse(tmsReponseItem.dataValues.message);\r\n                        var conMessage;\r\n                        var resp = JSON.parse(tmsReponseItem.dataValues.message);\r\n                        //Derive accountNumber to be sent to LOSTER system\r\n                        let vendorOrderItem = (yield this.vendorBoookingRepository.get({ \"customer_order_number\": tmsReponseItem[\"customer_order_number\"] }));\r\n                        if (vendorOrderItem.length > 0) {\r\n                            var id = vendorOrderItem[0][\"id\"];\r\n                        }\r\n                        else {\r\n                            //Save Error Message to exp_response_data table\r\n                            yield this.expResponseDataRepository.update({ \"id\": tmsReponseItem.id }, { \"status\": \"ERROR\", \"error_reason\": `No Vendor Booking Found with customer_order_number=${tmsReponseItem[\"customer_order_number\"]}` });\r\n                            continue;\r\n                        }\r\n                        let addressList = yield this.addressRepository.get({ \"address_type\": \"consignor\", \"parent_id\": id });\r\n                        let accountNumber;\r\n                        if (addressList.length > 0) {\r\n                            accountNumber = addressList[0][\"address_id\"];\r\n                        }\r\n                        else {\r\n                            accountNumber = \"\";\r\n                        }\r\n                        console.log(`Account Number is ${accountNumber}`);\r\n                        var message = {\r\n                            \"content\": {\r\n                                \"accountNumber\": accountNumber,\r\n                                \"HAWB\": resp.shipmentTrackingNumber,\r\n                                \"PrincipalreferenceNumber\": tmsReponseItem[\"customer_order_number\"],\r\n                                \"documents\": resp.documents\r\n                            }\r\n                        };\r\n                        //Removing extraneous fields in the error message\r\n                        var errorBody = JSON.parse(tmsReponseItem.dataValues.message);\r\n                        delete errorBody[\"instance\"];\r\n                        delete errorBody[\"message\"];\r\n                        var errorMessage = {\r\n                            \"content\": {\r\n                                \"accountNumber\": accountNumber,\r\n                                \"HAWB\": resp.shipmentTrackingNumber,\r\n                                \"PrincipalreferenceNumber\": tmsReponseItem[\"customer_order_number\"],\r\n                                \"documents\": resp.documents\r\n                            },\r\n                            \"error\": errorBody\r\n                        };\r\n                        //Construct final Loster POST message\r\n                        if (tmsReponseItem.dataValues.statusCode == 201) {\r\n                            conMessage = yield this.lobsterTransformationService.lobData(message);\r\n                        }\r\n                        else {\r\n                            conMessage = yield this.lobsterTransformationService.lobData(errorMessage, true);\r\n                        }\r\n                        console.log(\"conMessage\", conMessage);\r\n                        var options = {\r\n                            'method': 'POST',\r\n                            'url': process.env.LOBSTER_POST_URL,\r\n                            'headers': {\r\n                                'Authorization': 'Basic QkxFU1NfVEVTVDpUMCNmIWI4PTVR',\r\n                                'Content-Type': 'text/plain'\r\n                            },\r\n                            body: JSON.stringify(conMessage.tdata)\r\n                        };\r\n                        this.logger.log(`Lobster Options is ${JSON.stringify(options)}`);\r\n                        var result = yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                            if (error)\r\n                                throw new Error(error);\r\n                            //Save response from Lobster system to exp_response table\r\n                            console.log(\"response----->\", response.body);\r\n                            var expResponse = yield this.expResponseDataRepository.update({ \"id\": tmsReponseItem.id }, { \"status\": response.body, \"request\": JSON.stringify(options) });\r\n                            //console.log(\"Response---->\", expResponse)\r\n                        }));\r\n                        resolve({ 'status': \"Success\" });\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    //Update processing_status of events table to ERROR\r\n                    yield this.expResponseDataRepository.update({ \"id\": id }, { \"status\": \"ERROR\", \"error_reason\": error });\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: error } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    postEventsToLobster() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            //Get Data from EVENTS_TO_LOBSTER View\r\n            let evenntsDataToLobster = yield this.eventsToLobsterRepository.get({});\r\n            let transformedEventsData;\r\n            let options;\r\n            let eventsUpdateObj;\r\n            let eventsUpdateWhereObj;\r\n            for (let evenntsDataToLobsterItem of evenntsDataToLobster) {\r\n                try {\r\n                    //Only Hawb should be enough as the events table will only contain the events that should be sent to LOBSTER System\r\n                    eventsUpdateWhereObj = { \"hawb\": evenntsDataToLobsterItem[\"hawb\"] };\r\n                    eventsUpdateObj = { \"processing_status\": \"SENT\" };\r\n                    transformedEventsData = yield this.lobsterTransformationService.transformEvents(evenntsDataToLobsterItem);\r\n                    options = {\r\n                        'method': 'POST',\r\n                        'url': process.env.LOBSTER_POST_URL,\r\n                        'headers': {\r\n                            'Authorization': 'Basic QkxFU1NfVEVTVDpUMCNmIWI4PTVR',\r\n                            'Content-Type': 'text/plain'\r\n                        },\r\n                        body: JSON.stringify(transformedEventsData)\r\n                    };\r\n                    this.logger.log(`Lobster Options is ${JSON.stringify(options)}`);\r\n                    yield request(options, (error, response) => __awaiter(this, void 0, void 0, function* () {\r\n                        if (error)\r\n                            throw new Error(error);\r\n                        //Update processing_status of events table to SENT\r\n                        yield this.eventsRepository.update(eventsUpdateWhereObj, eventsUpdateObj);\r\n                    }));\r\n                }\r\n                catch (error) {\r\n                    //Update processing_status of events table to ERROR\r\n                    eventsUpdateObj = { \"processing_status\": \"ERROR\", \"error_reason\": error };\r\n                    yield this.eventsRepository.update(eventsUpdateWhereObj, eventsUpdateObj);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.LobsterService = LobsterService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/LobsterService.ts?");

/***/ }),

/***/ "./src/service/LobsterTransformationService.ts":
/*!*****************************************************!*\
  !*** ./src/service/LobsterTransformationService.ts ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LobsterTransformationService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nvar transform = (__webpack_require__(/*! node-json-transform */ \"node-json-transform\").transform);\r\nconst moment = __importStar(__webpack_require__(/*! moment */ \"moment\"));\r\nclass LobsterTransformationService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    lobData(message, isError) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    //console.log('Request Body inside LobsterTransformationService', req)    \r\n                    var baseMap = {\r\n                        item: {\r\n                            \"header\": \"content\",\r\n                            \"body\": \"content\"\r\n                        },\r\n                        operate: [\r\n                            {\r\n                                run: function (val) {\r\n                                    var today = new Date();\r\n                                    var todayUTC = moment.utc(today).format(\"YYYY-MM-DD HH:mm:ss\") + ' UTC' + moment.utc(today).format(\"Z\");\r\n                                    var _header = {\r\n                                        \"Transmission\": {\r\n                                            \"toEntity\": \"Kalmar\",\r\n                                            \"fromEntity\": \"EXP\",\r\n                                            \"datacreationDate\": todayUTC //\"2022-06-29 06:21:57 UTC+02:00\"\r\n                                        },\r\n                                        \"businessKeys\": {\r\n                                            \"accountNumber\": message.content.accountNumber,\r\n                                            \"HAWB\": message.content.HAWB,\r\n                                            \"PrincipalreferenceNumber\": message.content.PrincipalreferenceNumber,\r\n                                            \"estimatedDeliveryDate\": message.content.estimatedDeliveryDate\r\n                                        }\r\n                                    };\r\n                                    console.log(\"HEADER--->\", _header);\r\n                                    return _header;\r\n                                },\r\n                                on: \"header\"\r\n                            },\r\n                            {\r\n                                run: function (val) {\r\n                                    var body;\r\n                                    if (isError) {\r\n                                        body = {\r\n                                            \"Error\": [message.error]\r\n                                        };\r\n                                    }\r\n                                    else {\r\n                                        body = {\r\n                                            \"documents\": message.content.documents\r\n                                        };\r\n                                    }\r\n                                    return body;\r\n                                },\r\n                                on: \"body\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    //console.log(\"baseMap\",baseMap)\r\n                    var tdata = transform(message, baseMap);\r\n                    console.log(\"tdata----->\\n\\n\", tdata);\r\n                    resolve({ tdata });\r\n                }\r\n                catch (e) {\r\n                    resolve({ status: { code: 'FAILURE', message: \"Error in FileFormat\", error: e } });\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    transformEvents(message, res, isError) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    var baseMap = {\r\n                        item: {\r\n                            \"header\": \"content\",\r\n                            \"body\": \"content\"\r\n                        },\r\n                        operate: [\r\n                            {\r\n                                run: function (val) {\r\n                                    var today = new Date();\r\n                                    var todayUTC = moment.utc(today).format(\"YYYY-MM-DD HH:mm:ss\") + ' UTC' + moment.utc(today).format(\"Z\");\r\n                                    var _header = {\r\n                                        \"Transmission\": {\r\n                                            \"toEntity\": \"Kalmar\",\r\n                                            \"fromEntity\": \"EXP\",\r\n                                            \"datacreationDate\": todayUTC //\"2022-06-29 06:21:57 UTC+02:00\"\r\n                                        },\r\n                                        \"businessKeys\": {\r\n                                            \"accountNumber\": message.shipperId,\r\n                                            \"HAWB\": message.hawb,\r\n                                            \"PrincipalreferenceNumber\": message.customerOrderNumber,\r\n                                        }\r\n                                    };\r\n                                    return _header;\r\n                                },\r\n                                on: \"header\"\r\n                            },\r\n                            {\r\n                                run: function (val) {\r\n                                    var body = {\r\n                                        \"Events\": message.events\r\n                                    };\r\n                                    return body;\r\n                                },\r\n                                on: \"body\"\r\n                            }\r\n                        ]\r\n                    };\r\n                    resolve(yield transform(message, baseMap));\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }));\r\n        });\r\n    }\r\n}\r\nexports.LobsterTransformationService = LobsterTransformationService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/LobsterTransformationService.ts?");

/***/ }),

/***/ "./src/service/MessagingService.ts":
/*!*****************************************!*\
  !*** ./src/service/MessagingService.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MessagingService = void 0;\r\nconst kafkajs_1 = __webpack_require__(/*! kafkajs */ \"kafkajs\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nclass MessagingService {\r\n    constructor() {\r\n        this.kafkav = new kafkajs_1.Kafka({\r\n            clientId: process.env.KAFKA_CLIENT_ID,\r\n            brokers: ['kafka-1:19092', 'kafka-2:29092', 'kafka-3:39092', 'kafka-4:19092', 'kafka-5:29092']\r\n        });\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    ///////---Publishing to DATAGEN-------/////////\r\n    publishMessageToDataGen(messageList) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!Array.isArray(messageList)) {\r\n                messageList = [messageList];\r\n            }\r\n            for (let message of messageList) {\r\n                this.logger.log(\"================================START-DATAGEN MESSAGE PUBLISH==================\", message);\r\n                this.logger.log(\"Datagen Message \", message);\r\n                this.logger.log(\"Topic name \", process.env.PUBLISH_TOPIC);\r\n                this.logger.log(\"payloads \", message.payloads);\r\n                const producer = this.kafkav.producer();\r\n                yield producer.connect();\r\n                let blessToken = yield producer.send({\r\n                    topic: process.env.PUBLISH_TOPIC,\r\n                    messages: [\r\n                        {\r\n                            value: JSON.stringify(message)\r\n                        }\r\n                    ]\r\n                });\r\n                this.logger.log(`BLESS TOKEN is ${JSON.stringify(blessToken)}`);\r\n                this.logger.log(\"================================STOP-DATAGEN MESSAGE PUBLISH==================\");\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.MessagingService = MessagingService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/MessagingService.ts?");

/***/ }),

/***/ "./src/service/UpdateCoreTablesService.ts":
/*!************************************************!*\
  !*** ./src/service/UpdateCoreTablesService.ts ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UpdateCoreTablesService = void 0;\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst VendorBookingRepository_1 = __webpack_require__(/*! ../data/repository/VendorBookingRepository */ \"./src/data/repository/VendorBookingRepository.ts\");\r\nconst DocumentRepository_1 = __webpack_require__(/*! ../data/repository/DocumentRepository */ \"./src/data/repository/DocumentRepository.ts\");\r\nconst moment = __importStar(__webpack_require__(/*! moment */ \"moment\"));\r\nvar fs = __webpack_require__(/*! fs */ \"fs\");\r\nvar request = __webpack_require__(/*! request */ \"request\");\r\nclass UpdateCoreTablesService {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n        this.vendorBoookingRepository = DIContainer_1.DI.get(VendorBookingRepository_1.VendorBookingRepository);\r\n        this.documentRepository = DIContainer_1.DI.get(DocumentRepository_1.DocumentRepository);\r\n    }\r\n    //UPDATE TMS RESPONE IN CORE TABLES//\r\n    updateTmsResCoreTables(req) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                //console.log(\"Request Body in updateTmsResCoreTables---->\",req)\r\n                var jsonObj = JSON.parse(req.message);\r\n                console.log(\"Test----->\", JSON.parse(req.message));\r\n                var today = new Date();\r\n                var todayUTC = moment.utc(today).format(\"YYYY-MM-DD HH:mm:ss\") + ' UTC' + moment.utc(today).format(\"Z\");\r\n                var whereObj = { \"customer_order_number\": req.customer_order_number };\r\n                console.log(\"req.customer_order_number\", req.statusCode, req.customer_order_number, req.shipmentTrackingNumber);\r\n                var vendorBookingObj;\r\n                //Update VendorBooking Table based on Error/Success status\r\n                if (req.statusCode == 201) {\r\n                    vendorBookingObj = {\r\n                        \"order_status\": process.env.VEN_BOOKING_CON_STATUS,\r\n                        \"hawb\": req.shipmentTrackingNumber,\r\n                        \"response_time_stamp\": todayUTC\r\n                    };\r\n                    console.log(\"vendorBookingObj--->\", vendorBookingObj);\r\n                    var vendorBookingObjSuc = yield this.vendorBoookingRepository.update(whereObj, vendorBookingObj);\r\n                    //Update Documents Table\r\n                    var documentsObj = {\r\n                        customerordernumber: req.customer_order_number,\r\n                        shiptrackingnum: req.shipmentTrackingNumber,\r\n                        typecode: jsonObj.documents[0].typeCode,\r\n                        label: jsonObj.documents[0].content\r\n                    };\r\n                    console.log(\"DOCUMENT---->\", documentsObj);\r\n                    yield this.documentRepository.create(documentsObj);\r\n                }\r\n                else {\r\n                    vendorBookingObj = {\r\n                        \"order_status\": process.env.VEN_BOOKING_ERR_STATUS,\r\n                        \"response_error_code\": jsonObj.status,\r\n                        \"response_error_title\": jsonObj.title,\r\n                        \"response_error_detail\": (jsonObj.additionalDetails != undefined) ? jsonObj.detail + \",\" + \"[\" + jsonObj.additionalDetails + \"]\" : jsonObj.detail,\r\n                        \"response_time_stamp\": todayUTC\r\n                    };\r\n                    console.log(\"vendorBookingObj--->\", vendorBookingObj);\r\n                    var vendorBookingObjErr = yield this.vendorBoookingRepository.update(whereObj, vendorBookingObj);\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(\"Error in Updatetables---->\", error);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.UpdateCoreTablesService = UpdateCoreTablesService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/UpdateCoreTablesService.ts?");

/***/ }),

/***/ "./src/service/UtilityService.ts":
/*!***************************************!*\
  !*** ./src/service/UtilityService.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UtilityService = void 0;\r\nclass UtilityService {\r\n    isJsonString(val) {\r\n        try {\r\n            JSON.parse(val);\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    //---------------------------Generatin vcid-----------------------//\r\n    genVcid(sender, receiver, appId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\r\n            var timeInMillSec = new Date().getTime();\r\n            //generate random string\r\n            var randomStr = '';\r\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n            var charactersLength = characters.length;\r\n            for (var i = 0; i < 20; i++) {\r\n                randomStr += characters.charAt(Math.floor(Math.random() *\r\n                    charactersLength));\r\n            }\r\n            var vcIdStr = sender + \"#\" + appId + \"#\" + timeInMillSec + \"#\" + randomStr;\r\n            const hash = createHash('sha256');\r\n            hash.write(JSON.stringify(vcIdStr));\r\n            vcIdStr = hash.digest('hex');\r\n            return vcIdStr;\r\n        });\r\n    }\r\n}\r\nexports.UtilityService = UtilityService;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/service/UtilityService.ts?");

/***/ }),

/***/ "./src/util/FileUtil.ts":
/*!******************************!*\
  !*** ./src/util/FileUtil.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FileUtil = void 0;\r\nconst fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nclass FileUtil {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    writeToFile(filePath, data) {\r\n        try {\r\n            fs_1.default.writeFile(filePath, data, { flag: 'w' }, e => {\r\n                if (e)\r\n                    console.error(e);\r\n                this.logger.log('Data written to File');\r\n            });\r\n        }\r\n        catch (err) {\r\n            this.logger.log(err);\r\n        }\r\n    }\r\n}\r\nexports.FileUtil = FileUtil;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/util/FileUtil.ts?");

/***/ }),

/***/ "./src/util/GenericUtil.ts":
/*!*********************************!*\
  !*** ./src/util/GenericUtil.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GenericUtil = void 0;\r\nconst moment_1 = __importDefault(__webpack_require__(/*! moment */ \"moment\"));\r\nconst Logger_1 = __webpack_require__(/*! ../logger/Logger */ \"./src/logger/Logger.ts\");\r\nconst DIContainer_1 = __webpack_require__(/*! ../di/DIContainer */ \"./src/di/DIContainer.ts\");\r\nconst md5_1 = __webpack_require__(/*! ts-md5/dist/md5 */ \"ts-md5/dist/md5\");\r\nclass GenericUtil {\r\n    constructor() {\r\n        this.logger = DIContainer_1.DI.get(Logger_1.Logger);\r\n    }\r\n    getFormattedDate(date, format) {\r\n        return moment_1.default(date).format(format);\r\n    }\r\n    getDefaultFormattedDate(date) {\r\n        return this.getFormattedDate(date, 'YYYY-MM-DD');\r\n    }\r\n    getDefaultLongFormattedDate(date) {\r\n        return this.getFormattedDate(date, 'YYYY-MM-DD HH:mm:ss');\r\n    }\r\n    getLocalDateFromDefaultFormat(dateStr) {\r\n        return this.getLocalDateFromString(dateStr, 'YYYY-MM-DD');\r\n    }\r\n    getLocalDateFromString(dateStr, format) {\r\n        const date = moment_1.default(dateStr, format).toDate();\r\n        return this.getLocalDate(date);\r\n    }\r\n    getLocalDate(date) {\r\n        return new Date(date.getTime() - (date.getTimezoneOffset() * 60000));\r\n    }\r\n    jsonToQueryString(json) {\r\n        return '?' +\r\n            Object.keys(json).map(function (key) {\r\n                return encodeURIComponent(key) + '=' +\r\n                    encodeURIComponent(json[key]);\r\n            }).join('&');\r\n    }\r\n    static generateRandomHash() {\r\n        return md5_1.Md5.hashStr((new Date()).toString());\r\n    }\r\n    static generateHash(data) {\r\n        try {\r\n            console.log(\"generatehash--->\", md5_1.Md5.hashStr((data).toString()));\r\n            return md5_1.Md5.hashStr((data).toString());\r\n        }\r\n        catch (error) {\r\n            console.log(`Error=========`);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\nexports.GenericUtil = GenericUtil;\r\n\n\n//# sourceURL=webpack://vnd-ord-downstream/./src/util/GenericUtil.ts?");

/***/ }),

/***/ "bluebird":
/*!***************************!*\
  !*** external "bluebird" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bluebird");

/***/ }),

/***/ "body-parser":
/*!******************************!*\
  !*** external "body-parser" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("body-parser");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("cors");

/***/ }),

/***/ "cron":
/*!***********************!*\
  !*** external "cron" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("cron");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("express");

/***/ }),

/***/ "express-session":
/*!**********************************!*\
  !*** external "express-session" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("express-session");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "kafkajs":
/*!**************************!*\
  !*** external "kafkajs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("kafkajs");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("moment");

/***/ }),

/***/ "multer":
/*!*************************!*\
  !*** external "multer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("multer");

/***/ }),

/***/ "node-json-transform":
/*!**************************************!*\
  !*** external "node-json-transform" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("node-json-transform");

/***/ }),

/***/ "node-schedule":
/*!********************************!*\
  !*** external "node-schedule" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("node-schedule");

/***/ }),

/***/ "request":
/*!**************************!*\
  !*** external "request" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("request");

/***/ }),

/***/ "sequelize":
/*!****************************!*\
  !*** external "sequelize" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("sequelize");

/***/ }),

/***/ "ts-md5/dist/md5":
/*!**********************************!*\
  !*** external "ts-md5/dist/md5" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("ts-md5/dist/md5");

/***/ }),

/***/ "winston":
/*!**************************!*\
  !*** external "winston" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("winston");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;